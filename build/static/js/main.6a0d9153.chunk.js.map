{"version":3,"sources":["components/checkboxTree/checkboxTree.js","components/Banner.js","config.js","services/Apollo.js","services/auth.js","components/Nav.js","components/Layout.js","routes/Onboarding.js","components/Toasts.js","utils.js","routes/admin/index.js","theme.js","components/routes.js","routes/admin/Login.js","routes/admin/UserManagement.js","routes/admin/Activity.js","routes/admin/EditAgency.js","routes/admin/CreateNotifications.js","index.js"],"names":["getNodeIds","nodes","ids","forEach","_ref","value","children","concat","Object","toConsumableArray","CustomCheckboxTree","_ref2","options","handleClear","_useState","useState","_useState2","slicedToArray","setNodes","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","errors","setErrors","_useState7","_useState8","checked","setChecked","_useState9","_useState10","expanded","setExpanded","React","useEffect","prev","filter","i","includes","react_default","a","createElement","dist_index_esm","as","onSubmit","e","preventDefault","agency","cleanChecked","map","split","fetch","process","method","headers","Accept","body","JSON","stringify","text","then","r","ok","alert","catch","form","handleSubmit","py","htmlFor","id","name","onChange","defineProperty","target","color","length","index_browser_default","optimisticToggle","noCascade","onCheck","checkedInput","onExpand","icons","check","className","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","style","marginLeft","variant","onClick","type","Banner","sx","px","backgroundImage","backgroundSize","backgroundPosition","borderRadius","bg","position","zIndex","textAlign","fontSize","top","right","left","bottom","backgroundColor","opacity","dotenv","require","NODE_STAGE","config","staging","GRAPHQL_URL","production","REACT_APP_PRODUCTION_GRAPHQL_URL","slackUrl","flattenedConfig","objectSpread2","httpLink","createHttpLink","uri","authLink","setContext","_","token","cookie","load","Authorization","client","ApolloClient","link","cache","InMemoryCache","isBrowser","window","getToken","gql","_templateObject","isLoggedIn","isAdmin","role","jwt","decode","getUserRole","logout","callback","remove","path","isActive","isCurrent","textDecoration","Nav","p","fontWeight","justifyContent","flex","es","getProps","to","href","event","navigate","Layout","withNav","bannerChildren","loading","width","mapToOptionTree","k","label","category","subCategories","sub","kSub","subSubCategories","subSub","kSubSub","Onboarding","values","setValues","categorySelect","inputValues","setInputValues","onInputChange","onAdd","normalizedValue","toLowerCase","word","toUpperCase","substr","join","trim","prevVals","newVals","c","push","console","error","mappedOptions","m","flexWrap","maxWidth","margin","borderBottom","pb","checkboxTree_CustomCheckboxTree","flexDirection","defaultValue","v","key","Ctx","createContext","ToastContainer","props","assign","Toast","onDismiss","rest","objectWithoutProperties","padding","toastCount","ToastProvider","_React$useState","_React$useState2","toasts","setToasts","newToasts","t","Provider","add","_ref3","content","toast","Toasts_ToastContainer","_ref4","Toasts_Toast","useToasts","useContext","toTitleCase","str","replace","txt","charAt","checkFieldIsDirty","dirtyFieldsArray","d","ONBOARD_AGENCY","admin_templateObject","CardFooter","height","formatGqlArgs","data","args","agencyName","activities","stats","surflineSpotId","users","create","u","positions","dispatchable","Admin","_useMutation","useMutation","_useMutation2","onboard","gqlArgs","setGQLArgs","_useModal","useModal","lib_default","isOpen","keys","Fragment","generateSnippet","admin_CardFooter","marginRight","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","next","variables","sent","onboardAgency","hideModal","t0","message","stop","_useModal2","showModal","handleCheckBoxChange","handleChange","field","cleanValue","removeFront","rows","mb","defaultChecked","theme","breakpoints","colors","white","black","gray","blue","indigo","purple","pink","red","orange","yellow","green","teal","cyan","grayDark","background","primary","secondary","muted","success","info","warning","danger","light","dark","textMuted","space","fonts","heading","monospace","sans","fontSizes","fontWeights","bold","normal","display","lineHeights","sizes","sm","md","lg","xl","shadows","default","radii","pill","alerts","fontFamily","lineHeight","mt","forms","buttons","styles","root",":hover","h1","h2","h3","h4","h5","h6","blockquote","table","marginBottom","borderCollapse","th","verticalAlign","borderTopWidth","borderTopStyle","borderTopColor","borderBottomWidth","borderBottomStyle","borderBottomColor","td","inlineCode","img","ProtectedRoute","Component","component","from","noThrow","PublicRoute","LOGIN","Login_templateObject","Login","login","_useMutation2$","_useForm","useForm","register","save","minHeight","alignItems","email","password","ref","block","GET_AGENCIES","UserManagement_templateObject","INVITE_USER","_templateObject2","UserManagement","invite","_useQuery","useQuery","agencies","loadingAgencies","onInvite","agencyId","sendInviteEmail","_x","apply","this","arguments","required","sevenDaysAgo","moment","subtract","thirtyDaysAgo","dateRangeOptions","startDate","endDate","startOf","endOf","Activity_templateObject","AgencyActivity","dateRange","setDateRange","submissionWhereInput","createdAt","gt","toISOString","lt","submissionCount","GET_AGENCY_DETAILS","EditAgency_templateObject","EditAgency_templateObject2","UPDATE_AGENCY","_templateObject3","RE_SEND_INVITE","_templateObject4","selectedAgencyId","selectAgency","refetchQueries","updateOneAgency","_useMutation3","_useMutation4","resendInvite","resendingInvite","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadAgency","_useLazyQuery2$","loadingAgency","mode","formState","reset","dirty","dirtyFields","isSubmitting","touched","submitCount","defaultFormValues","settings","Array","onUpdate","connections","updatedActivities","newActivities","log","abrupt","update","uniqWith","b","currentLabel","startsWith","createActivtyTypeLabel","subLabelOne","subLabelTwo","subLabelThree","where","onResendInvite","_callee2","_context2","resendInviteEmail","_x2","minLength","EditAgency_FormError","EditAgency_ActivitiesTable","registerForm","react","EditAgency_UserTable","FormError","Table","columns","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","UserTable","_ref5","useMemo","Header","accessor","isSignedUp","tableData","Styled","ActivitiesTable","_ref6","setTableData","fieldName","border","marginTop","labelOne","labelTwo","labelThree","styled","div","_templateObject5","CreateNotifications_templateObject","CREATE_NOTIFICATION","CreateNotifications_templateObject2","createNotification","onCreate","isEmpty","connect","global","createOneNotificationMessage","CreateNotifications_FormError","url","CreateNotifications_templateObject3","components","pre","code","Prism","App","react_common_esm","index_esm","index_es","routes_PublicRoute","routes_ProtectedRoute","EditAgency","CreateNotifications","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.6a0d9153.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport { Box, Button, Input, Label } from \"theme-ui\";\n\nimport \"./checkbox-styles.css\";\n\nconst slackUrl = process.env.REACT_APP_SLACK_URL;\n\nfunction getNodeIds(nodes) {\n  let ids = [];\n\n  nodes &&\n    nodes.forEach(({ value, children }) => {\n      ids = [...ids, value, ...getNodeIds(children)];\n    });\n\n  return ids;\n}\n\nexport const CustomCheckboxTree = ({ options, handleClear }) => {\n  const [nodes, setNodes] = useState(options);\n  const [inputs, setInputs] = useState({});\n  const [errors, setErrors] = useState();\n  const [checked, setChecked] = useState();\n\n  const [expanded, setExpanded] = useState();\n\n  React.useEffect(() => {\n    setNodes(options);\n    setChecked((prev) => {\n      return getNodeIds(options).filter((i) =>\n        prev ? prev.includes(i) : true\n      );\n    });\n    setExpanded(getNodeIds(options));\n  }, [options]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputs.agency) {\n      return setErrors({ agency: \"Please input an agency name\" });\n    }\n    setErrors({});\n\n    const cleanChecked = checked.map((i) => i.split(\" -\")[0]);\n\n    fetch(slackUrl, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        text: ` ${inputs.agency} has submitted their stat form:, \\`\\`\\` ${cleanChecked}\\`\\`\\` `,\n      }),\n    })\n      .then((r) => {\n        if (r.ok === true) {\n          alert(\"Stat categories sent successfully\");\n        }\n      })\n      .catch((e) => {\n        setErrors({ form: `Error submitting: ${e}` });\n      });\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={(e) => handleSubmit(e)}>\n      <Box py={3}>\n        <Label htmlFor=\"agency\">My Agency Name</Label>\n        <Input\n          id=\"agency\"\n          name=\"agency\"\n          onChange={(e) => {\n            setInputs({ [e.target.name]: e.target.value });\n          }}\n        />\n        {errors && errors.agency && <Box color=\"red\">{errors.agency}</Box>}\n      </Box>\n      <Box py={3}>\n        {nodes.length < 1 && <div>No stats to select.</div>}\n        <CheckboxTree\n          nodes={nodes}\n          checked={checked}\n          expanded={expanded}\n          optimisticToggle={false}\n          noCascade={true}\n          onCheck={(checkedInput) => {\n            return setChecked(checkedInput);\n          }}\n          onExpand={(expanded) => setExpanded(expanded)}\n          icons={{\n            check: <span className=\"rct-icon rct-icon-check\" />,\n            uncheck: <span className=\"rct-icon rct-icon-uncheck\" />,\n            halfCheck: <span className=\"rct-icon rct-icon-half-check\" />,\n            expandClose: <span className=\"rct-icon rct-icon-expand-close\" />,\n            expandOpen: <span className=\"rct-icon rct-icon-expand-open\" />,\n            expandAll: <span className=\"rct-icon rct-icon-expand-all\" />,\n            collapseAll: <span className=\"rct-icon rct-icon-collapse-all\" />,\n            parentClose: null,\n            parentOpen: null,\n            leaf: null,\n          }}\n        />\n      </Box>\n      <Button>Submit categories</Button>\n\n      <Button\n        style={{ marginLeft: 10 }}\n        variant=\"secondary\"\n        onClick={() => handleClear()}\n        type=\"button\"\n      >\n        Clear Checkboxes\n      </Button>\n\n      {errors && errors.form && <Box color=\"red\">{errors.form}</Box>}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Box, Heading } from \"theme-ui\";\n\nexport default ({ children }) => {\n  return (\n    <Box\n      sx={{\n        px: 4,\n        py: \"10rem\",\n        backgroundImage:\n          \"url(https://images.unsplash.com/photo-1444762908691-c8461d64d5f6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=3300&q=80)\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        borderRadius: 8,\n        color: \"white\",\n        bg: \"gray\",\n        position: \"relative\"\n      }}\n    >\n      <Heading\n        sx={{\n          position: \"relative\",\n          zIndex: \"2\",\n          textAlign: \"center\",\n          fontSize: [5, 6]\n        }}\n        as=\"h4\"\n      >\n        {children}\n      </Heading>\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"0px\",\n          right: \"0px\",\n          left: \"0px\",\n          bottom: \"0px\",\n          zIndex: \"1\",\n          backgroundColor: \"rgb(51, 51, 51)\",\n          opacity: \"0.8\"\n        }}\n      />\n    </Box>\n  );\n};\n","const dotenv = require(\"dotenv\");\n\n// require and configure dotenv, will load vars in .env in PROCESS.ENV\nif (process.env.NODE_STAGE !== \"production\") {\n  dotenv.config();\n}\n\nconst config = {\n  staging: { GRAPHQL_URL: process.env.REACT_APP_STAGING_GRAPHQL_URL },\n  production: {\n    GRAPHQL_URL: process.env.REACT_APP_PRODUCTION_GRAPHQL_URL\n  },\n  slackUrl: process.env.REACT_APP_SLACK_URL\n};\n\nconst flattenedConfig = {\n  ...config,\n  ...config[process.env.REACT_APP_STAGE]\n};\n\nexport default flattenedConfig;\n","import config from \"../config\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport cookie from \"react-cookies\";\n\nconst httpLink = createHttpLink({ uri: config.GRAPHQL_URL });\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from cookie if it exists\n  const token = cookie.load(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default client;\n","import React, { Fragment } from \"react\";\nimport cookie from \"react-cookies\";\nimport client from \"../services/Apollo\";\n\nimport jwt from \"jsonwebtoken\";\nimport gql from \"graphql-tag\";\n\n// helpful for debugging netlify identity\nconst logAuth = process.env.NODE_ENV === \"development\" && false; // set to true to turn on logging\nconst clog = (...args) => logAuth && console.log(...args);\n// helpful for debugging netlify identity\n\nexport const isBrowser = () => typeof window !== \"undefined\";\n\nconst GET_CURRENT_USER = gql`\n  query CurrentUser {\n    me {\n      id\n      email\n      name\n      role\n    }\n  }\n`;\n\nexport const getUser = () => {\n  return client\n    ? client\n        .query({ query: GET_CURRENT_USER })\n        .then(d => d.me)\n        .catch(() => {})\n    : null;\n};\n\nexport const getUserRole = () => {\n  if (!isLoggedIn()) return null;\n  const token = getToken();\n  return jwt.decode(token).role;\n};\n\nexport const setToken = token => cookie.save(\"token\", token, { path: \"/\" });\nexport const deleteToken = () => cookie.remove(\"token\", { path: \"/\" });\n\nexport const getToken = () => cookie.load(\"token\");\n// export const handleLogin = callback => {\n//   clog('isLoggedIn check', isLoggedIn())\n//   if (isLoggedIn()) {\n//     clog('logged in')\n//     callback(getUser())\n//   } else {\n//     clog('logging in...')\n//     netlifyIdentity.open()\n//     netlifyIdentity.on('login', user => {\n//       clog('logged in!', { user })\n//       setUser(user)\n//       callback(user)\n//     })\n//   }\n// }\n\nexport const isLoggedIn = () => {\n  if (!isBrowser()) return false;\n  // const user = getUser()\n  const user = getToken();\n  return !!user;\n};\n\nexport const isAdmin = () => {\n  if (!isBrowser()) return false;\n  const role = getUserRole();\n  if (!role) return false;\n  clog(\"isAdmin check\", { role });\n  return role === \"SUPER_ADMIN\";\n};\n\nexport const logout = callback => {\n  deleteToken();\n  callback();\n};\n\nexport const AdminOnly = ({ children }) => {\n  const isAdminRole = isAdmin();\n  if (!isAdminRole) {\n    return <Fragment />;\n  }\n  return children;\n};\n","import React from \"react\";\nimport { Flex, NavLink, Box } from \"theme-ui\";\nimport { Link, navigate } from \"@reach/router\";\nimport { logout } from \"../services/auth\";\n\nconst isActive = ({ isCurrent }) => {\n  return isCurrent\n    ? { style: { color: \"inherit\", textDecoration: \"underline\" } }\n    : null;\n};\n\nexport default () => {\n  return (\n    <Flex\n      as=\"nav\"\n      p={25}\n      sx={{\n        bg: \"black\",\n        color: \"white\",\n        fontWeight: \"bold\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Flex sx={{ flex: 1 }}>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin\"\n          >\n            Create Agency\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/edit-agency\"\n          >\n            Edit Agency\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/create-notifications\"\n          >\n            Create Notifications\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/users\"\n          >\n            Invite Users\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/activity\"\n          >\n            Activity\n          </Link>\n        </Box>\n      </Flex>\n      <Box p={2}>\n        <NavLink\n          href=\"/agency/stats\"\n          onClick={(event) => {\n            event.preventDefault();\n            logout(() => navigate(`/admin/login`));\n          }}\n        >\n          Logout\n        </NavLink>\n      </Box>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Box, Spinner } from \"theme-ui\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nexport default function Layout({ withNav, bannerChildren, children, loading }) {\n  return (\n    <Box sx={{ position: \"relative\" }}>\n      {loading && (\n        <Box sx={{ position: \"fixed\", top: 0, right: 0 }}>\n          <Spinner />\n        </Box>\n      )}\n      <Banner>{bannerChildren}</Banner>\n      {withNav && (\n        <Box sx={{ width: \"100%\" }}>\n          <Nav />\n        </Box>\n      )}\n      <Box p={45} sx={{ position: \"relative\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Button,\n  Box,\n  Flex,\n  Heading,\n  Text,\n  Input,\n  Label,\n  Select,\n} from \"theme-ui\";\n\nimport { CustomCheckboxTree as CheckboxTree } from \"../components/checkboxTree/checkboxTree\";\nimport Layout from \"../components/Layout\";\n\nconst mapToOptionTree = (options) => {\n  return options.map((i, k) => ({\n    label: i.category,\n    value: `${i.category} - ${k}`,\n    children:\n      i.subCategories &&\n      i.subCategories.map((sub, kSub) => {\n        return {\n          label: sub,\n          value: `${i.category} / ${sub} - ${kSub}`,\n          children:\n            i.subSubCategories &&\n            i.subSubCategories.map((subSub, kSubSub) => {\n              return {\n                label: subSub,\n                value: `${i.category} / ${sub} / ${subSub} - ${kSub + kSubSub}`,\n              };\n            }),\n        };\n      }),\n  }));\n};\n\nfunction normalizeString(str) {\n  return str\n    .toLowerCase()\n    .split(\" \")\n    .map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    })\n    .join(\" \")\n    .trim();\n}\n\nconst options = [\n  {\n    category: \"Rescues\",\n    subCategories: [\n      \"Rip Current\",\n      \"Surf\",\n      \"Pier\",\n      \"Rocks & Jetty\",\n      \"Inshore Holes\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Swimmer\", \"Apparatus\", \"Other\"],\n  },\n  {\n    category: \"Preventative Action\",\n    subCategories: [\n      \"Rip Current\",\n      \"Surf\",\n      \"Pier\",\n      \"Rocks & Jetty\",\n      \"Inshore Holes\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Swimmer\", \"Apparatus\", \"Other\"],\n  },\n  {\n    category: \"Minor Medical Aid\",\n    subCategories: [\n      \"Laceration\",\n      \"Abrasion\",\n      \"Fracture\",\n      \"Sprain or Strain\",\n      \"Head Neck Back Injury\",\n      \"Stingray\",\n      \"JellyFish\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Skating\", \"Surfing\", \"Biking\", \"Other\"],\n  },\n  {\n    category: \"Major Medical Aid\",\n    subCategories: [\n      \"Laceration\",\n      \"Abrasion\",\n      \"Fracture\",\n      \"Sprain or Strain\",\n      \"Head Neck Back Injury\",\n      \"Stingray\",\n      \"JellyFish\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Skating\", \"Surfing\", \"Biking\", \"Other\"],\n  },\n  {\n    category: \"Enforcement\",\n    subCategories: [\"Warning\", \"Citation\", \"PD Assist\", \"Arrest\"],\n    subSubCategories: [\n      \"BBQ\",\n      \"Alcohol\",\n      \"Fighting\",\n      \"Smoking\",\n      \"Unsafe Beach Activity\",\n      \"Other\",\n    ],\n  },\n  {\n    category: \"Missing Person\",\n    subCategories: [\"Child\", \"Adult\"],\n    subSubCategories: [\"Lost\", \"Found\"],\n  },\n  {\n    category: \"Contact\",\n    subCategories: [\n      \"Public Assist\",\n      \"Public Education\",\n      \"Providing Information\",\n    ],\n  },\n  {\n    category: \"Wildlife\",\n    subCategories: [\"Bird\", \"Mammal\", \"Shark\"],\n    subSubCategories: [\"Live\", \"Dead\", \"Injured\"],\n  },\n  {\n    category: \"Boat\",\n    subCategories: [\"Warning\", \"Tow\", \"Assist\", \"Rescue\"],\n  },\n  {\n    category: \"Attendance\",\n    subCategories: [\"Beach\", \"Surfers\", \"Bodyboarders\", \"Lagoon\"],\n  },\n];\n\nfunction Onboarding() {\n  const [values, setValues] = useState(options);\n  const [inputValues, setInputValues] = useState({ categorySelect: \"All\" });\n\n  const onInputChange = (e) => {\n    setInputValues({ ...inputValues, [e.target.name]: e.target.value });\n  };\n\n  const onClear = () => {\n    setValues([]);\n  };\n\n  const onAdd = (value, name) => {\n    try {\n      const normalizedValue = normalizeString(value);\n      setValues((prevVals) => {\n        let newVals;\n        if (name === \"category\") {\n          newVals = [\n            ...prevVals,\n            {\n              [name]: normalizedValue,\n            },\n          ];\n        } else {\n          prevVals.forEach((c, i) => {\n            if (inputValues.categorySelect === \"All\") {\n              if (!prevVals[i][name]) {\n                prevVals[i][name] = [normalizedValue];\n              } else {\n                prevVals[i][name].push(normalizedValue);\n              }\n            } else {\n              if (inputValues.categorySelect === c.category) {\n                if (!prevVals[i][name]) {\n                  prevVals[i][name] = [normalizedValue];\n                } else {\n                  prevVals[i][name].push(normalizedValue);\n                }\n              }\n            }\n          });\n\n          newVals = prevVals;\n        }\n\n        return newVals;\n      });\n      setInputValues({\n        ...inputValues,\n        [name]: \"\",\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const mappedOptions = mapToOptionTree(values);\n\n  return (\n    <Layout withNav={false} bannerChildren=\"Watchtower Onboarding\">\n      <Box\n        m={2}\n        p={5}\n        sx={{\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          bg: \"blue\",\n          color: \"white\",\n        }}\n      >\n        Please fill out the below form to get your Watchtower configured to your\n        beach. If you have questions, please reach out to your Watchtower rep.\n      </Box>\n      <Flex\n        py={4}\n        sx={{ flexWrap: \"wrap\", maxWidth: \"1200px\", margin: \"auto\" }}\n      >\n        <Box\n          sx={{ width: [\"100%\", \"50%\"], borderBottom: \"1px solid lightgray\" }}\n          p={3}\n        >\n          <Heading pb={1}>Select Your Stat Categories</Heading>\n          <Text sx={{ fontSize: 13 }} pb={3}>\n            Check the categories you would like to capture\n          </Text>\n          <CheckboxTree options={mappedOptions} handleClear={onClear} />\n        </Box>\n        <Flex p={3} sx={{ width: [\"100%\", \"50%\"], flexDirection: \"column\" }}>\n          <Heading pb={1}>Custom Categories</Heading>\n          <Text fontSize={13} pb={3}>\n            Custom categories will show in your checkbox tree\n          </Text>\n          <Flex py={3} sx={{ flexDirection: \"column\" }}>\n            <Box pb={2}>\n              <Label>Add Custom Category</Label>\n              <Input\n                value={inputValues.category || \"\"}\n                name=\"category\"\n                onChange={onInputChange}\n              />\n              <Box py={2}>\n                <Button onClick={() => onAdd(inputValues.category, \"category\")}>\n                  Add\n                </Button>\n              </Box>\n            </Box>\n          </Flex>\n          <Flex py={3} sx={{ flexDirection: \"column\" }}>\n            <Heading as=\"h4\" pb={1}>\n              Custom SubCategories\n            </Heading>\n            <Text fontSize={13} pb={3}>\n              Select the category you would like your sub and sub sub categories\n              to be added to.\n            </Text>\n            <Box py={2}>\n              <Label>Add to:</Label>\n              <Select\n                value={(inputValues && inputValues.categorySelect) || \"All\"}\n                name=\"categorySelect\"\n                onChange={onInputChange}\n                defaultValue=\"All\"\n              >\n                <option value={\"All\"}>{\"All\"}</option>\n                {values.map((v, i) => {\n                  return (\n                    <option key={i} value={v.category}>\n                      {v.category}\n                    </option>\n                  );\n                })}\n              </Select>\n            </Box>\n            <Box py={3}>\n              <Label>SubCategory</Label>\n              <Input\n                value={inputValues.subCategories || \"\"}\n                name=\"subCategories\"\n                onChange={onInputChange}\n              />\n              <Box py={2}>\n                <Button\n                  onClick={() =>\n                    onAdd(inputValues.subCategories, \"subCategories\")\n                  }\n                >\n                  Add\n                </Button>\n              </Box>\n            </Box>\n\n            <Box pb={2}>\n              <Label>SubSubCategory</Label>\n              <Input\n                value={inputValues.subSubCategories || \"\"}\n                name=\"subSubCategories\"\n                onChange={onInputChange}\n              />\n            </Box>\n\n            <Box>\n              <Button\n                onClick={() =>\n                  onAdd(inputValues.subSubCategories, \"subSubCategories\")\n                }\n              >\n                Add\n              </Button>\n            </Box>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Layout>\n  );\n}\n\nexport default Onboarding;\n","// @flow\n\nimport React from \"react\";\nimport { Alert } from \"theme-ui\";\n\nconst Ctx = React.createContext();\n\n// Styled Components\n// ==============================\n\nconst ToastContainer = (props) => (\n  <div\n    style={{ position: \"fixed\", right: 0, top: 0, zIndex: 1000 }}\n    {...props}\n  />\n);\nconst Toast = ({ children, onDismiss, ...rest }) => {\n  return (\n    <Alert\n      style={{\n        margin: 10,\n        padding: 10,\n      }}\n      onClick={onDismiss}\n      {...rest}\n    >\n      {children}\n    </Alert>\n  );\n};\n\n// Provider\n// ==============================\n\nlet toastCount = 0;\n\nexport function ToastProvider({ children }) {\n  const [toasts, setToasts] = React.useState([]);\n\n  const add = ({ content, ...rest }) => {\n    const id = toastCount++;\n    const toast = { content, id, ...rest };\n\n    setToasts([...toasts, toast]);\n  };\n  const remove = (id) => {\n    const newToasts = toasts.filter((t) => t.id !== id);\n    setToasts(newToasts);\n  };\n  // avoid creating a new fn on every render\n  const onDismiss = (id) => () => remove(id);\n\n  return (\n    <Ctx.Provider value={{ add, remove }}>\n      {children}\n      <ToastContainer>\n        {toasts.map(({ content, id, ...rest }) => {\n          return (\n            <Toast key={id} Toast={Toast} onDismiss={onDismiss(id)} {...rest}>\n              {content}\n            </Toast>\n          );\n        })}\n      </ToastContainer>\n    </Ctx.Provider>\n  );\n}\n\n// Consumer\n// ==============================\n\nexport const useToasts = () => React.useContext(Ctx);\n","export function toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nexport function checkFieldIsDirty(dirtyFieldsArray, key) {\n  return dirtyFieldsArray.filter((d) => d.includes(key))[0] || false;\n}\n","import React, { useState } from \"react\";\nimport { Input, Label, Text, Box, Button, Heading, Checkbox } from \"theme-ui\";\n\nimport Layout from \"../../components/Layout\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useModal } from \"react-modal-hook\";\nimport ReactModal from \"react-modal\";\nimport { useToasts } from \"../../components/Toasts\";\nimport { toTitleCase } from \"../../utils\";\n\nconst ONBOARD_AGENCY = gql`\n  mutation OnboardAgency($data: OnboardAgencyInput!) {\n    onboardAgency(data: $data) {\n      id\n    }\n  }\n`;\n\nconst CardFooter = ({ children }) => {\n  return (\n    <Box\n      p={25}\n      sx={{\n        position: \"absolute\",\n        bottom: 0,\n        right: 0,\n        left: 0,\n        height: \"auto\",\n        textAlign: \"right\"\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst Admin = () => {\n  const [onboard, { loading }] = useMutation(ONBOARD_AGENCY);\n  const [values, setValues] = useState({});\n  const [gqlArgs, setGQLArgs] = useState();\n  const { add } = useToasts();\n  const [showModal, hideModal] = useModal(\n    () => (\n      <ReactModal isOpen>\n        <Heading as=\"h1\">\n          Are you sure you would like to create this agency:\n        </Heading>\n\n        {Object.keys(values).length ? (\n          <>\n            {\" \"}\n            <Box p={45}>\n              <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n                <strong>\n                  Please review this for accuracy. It is difficule to undo a new\n                  agency.\n                </strong>\n              </Box>\n              {values.agencyName && (\n                <div>\n                  <Heading as=\"h3\">Agency:</Heading>\n                  {values.agencyName}\n                </div>\n              )}\n              {values.surflineSpotId && (\n                <div>\n                  <Heading as=\"h3\">SurflineSpotId:</Heading>\n                  {values.surflineSpotId}\n                </div>\n              )}\n              {values.stats && (\n                <div>\n                  <Heading as=\"h3\">Stats:</Heading>\n                  {JSON.stringify(values.stats)}\n                </div>\n              )}\n              {values.users && (\n                <div>\n                  <Heading as=\"h3\">Users:</Heading>\n                  {JSON.stringify(values.users)}\n                </div>\n              )}\n              {values.positions && (\n                <div>\n                  <Heading as=\"h3\">Positions:</Heading>\n                  {JSON.stringify(values.positions)}\n                </div>\n              )}\n              <Box py={20}>\n                <strong>\n                  {\" \"}\n                  In case you need Trevor to create, share this snippet:\n                </strong>\n              </Box>\n              {!gqlArgs ? (\n                <Button onClick={() => generateSnippet}>\n                  Generate Snippet\n                </Button>\n              ) : (\n                <code>\n                  {JSON.stringify(gqlArgs).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\")}\n                </code>\n              )}\n            </Box>\n            <CardFooter>\n              <Button\n                sx={{ marginRight: 5 }}\n                onClick={async () => {\n                  try {\n                    const res = await onboard({\n                      variables: {\n                        ...gqlArgs\n                      }\n                    });\n\n                    if (\n                      res.data &&\n                      res.data.onboardAgency &&\n                      res.data.onboardAgency.id\n                    ) {\n                      add({ content: \"Agency created!\", variant: \"success\" });\n                      hideModal();\n                    }\n                  } catch (e) {\n                    add({ content: e.message, variant: \"error\" });\n                  }\n                }}\n              >\n                {loading ? \"Creating...\" : \"Create Agency\"}\n              </Button>\n              <Button onClick={() => hideModal()} variant=\"secondary\">\n                Not yet\n              </Button>\n            </CardFooter>\n          </>\n        ) : (\n          <Box p={45}>\n            No values...\n            <CardFooter>\n              <Button onClick={() => hideModal()}>Go Back</Button>\n            </CardFooter>\n          </Box>\n        )}\n      </ReactModal>\n    ),\n    [values, gqlArgs, loading, add]\n  );\n\n  function handleCheckBoxChange(e) {\n    setValues({ ...values, [e.target.name]: !values[e.target.name] });\n  }\n\n  function handleChange(e, field) {\n    let cleanValue;\n    if (e.target.name === \"stats\") {\n      cleanValue = e.target.value.split(\",\").map(i => toTitleCase(i.trim()));\n    }\n    if (e.target.name === \"positions\") {\n      const removeFront = e.target.value.split(\",\");\n\n      cleanValue = removeFront\n        ? removeFront.map(i => ({\n            name: i && toTitleCase(i.trim()),\n            dispatchable: false\n          }))\n        : \"\";\n    }\n\n    if (e.target.name === \"users\") {\n      let removeFront = e.target.value.split(\":\");\n\n      if (!removeFront[1]) {\n        removeFront = e.target.value.split(\",\");\n      }\n\n      cleanValue = removeFront\n        ? removeFront.map(i => ({\n            name: i && toTitleCase(i.trim())\n          }))\n        : \"\";\n    }\n\n    setValues({\n      ...values,\n      [e.target.name]: cleanValue || toTitleCase(e.target.value)\n    });\n  }\n\n  function generateSnippet() {\n    setGQLArgs(formatGqlArgs(values));\n  }\n\n  function handleSubmit() {\n    generateSnippet();\n    showModal();\n  }\n\n  return (\n    <Layout withNav={true} bannerChildren=\"Watchtower Admin\">\n      <Box\n        sx={{ maxWidth: \"1200px\", margin: \"auto\" }}\n        py={45}\n        as=\"form\"\n        onSubmit={e => e.preventDefault()}\n      >\n        <Heading as=\"h1\">Create an agency</Heading>\n        <Text>Input information to create an agency</Text>\n        <Box py={25}>\n          {\" \"}\n          <Label>Agency Name</Label>\n          <Input id=\"agencyName\" name=\"agencyName\" onChange={handleChange} />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Surfline Spot Id</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              You can find this at the end of a surfline spot url. IT SHOULD\n              START WITH A 5 and be around 20+ characters. Example:\n            </strong>\n            <br />\n            https://www.surfline.com/surf-report/newport-beach-/5842041f4e65fad6a770882c\n          </Box>\n          <Input\n            id=\"surflineSpotId\"\n            name=\"surflineSpotId\"\n            onChange={handleChange}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Stats</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              {\" \"}\n              Should follow this notation with each type being separated by a\n              comma:\n            </strong>{\" \"}\n            <br />\n            Rescue, Rescue / Surf / Swimmer, Boat, Boat / Tow\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"stats\"\n            rows=\"15\"\n            style={{\n              width: \"100%\"\n            }}\n            onChange={e => handleChange(e)}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Users</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              {\" \"}\n              Should follow this notation with each type being separated by a\n              comma or a colon (:). IF THE NAMES HAVE A COMMA, MAKE SURE YOU USE\n              : TO SEPARATE. SEE EXAMPLE BELOW:\n            </strong>{\" \"}\n            <br />\n            Trevor Heath, David Rodriguez <br />\n            <strong>or</strong>\n            <br /> Heath, Trevor: Rodriguez, David\n            <br />\n            You can use this{\" \"}\n            <a href=\"https://convert.town/column-to-comma-separated-list\">\n              website\n            </a>{\" \"}\n            to convert a column to the correct format. The delimiter option\n            allows you to choose a comma or colon.\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"users\"\n            rows=\"15\"\n            style={{\n              width: \"100%\"\n            }}\n            onChange={e => handleChange(e)}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Positions</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              Should follow this notation with each type being separated by a\n              comma:\n            </strong>{\" \"}\n            <br />\n            Tower 10, 5210, 5220\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"positions\"\n            rows=\"15\"\n            style={{ width: \"100%\" }}\n            onChange={handleChange}\n          />\n          {values.positions && (\n            <div>\n              <h4>Dispatchable?</h4>\n              <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n                <strong>\n                  Check the positions that are defaulted as dispatchable, this\n                  can be editted by the user later on.\n                </strong>\n              </Box>\n              {values.positions.map((p, k) => {\n                return (\n                  <Box>\n                    <Label mb={3}>\n                      <Checkbox\n                        defaultChecked={false}\n                        name={p.name}\n                        onClick={handleCheckBoxChange}\n                      />\n                      {p.name}\n                    </Label>\n                  </Box>\n                );\n              })}\n            </div>\n          )}\n        </Box>\n\n        <Box py={45} sx={{ width: \"100%\" }}>\n          <Button sx={{ width: \"100%\" }} onClick={handleSubmit}>\n            Create agency data\n          </Button>\n        </Box>\n\n        {/* {stats.split(\",\").map(i => (\n        <div>{i}</div>\n      ))} */}\n      </Box>\n    </Layout>\n  );\n};\n\nconst formatGqlArgs = data => {\n  let args = {\n    agencyName: data.agencyName,\n    activities: data.stats,\n    surflineSpotId: data.surflineSpotId\n  };\n  if (data.users) {\n    args.users = {\n      create: data.users.map(u => ({\n        name: u.name\n      }))\n    };\n  }\n\n  if (data.positions) {\n    args.positions = {\n      create: data.positions.map(u => ({\n        name: u.name,\n        dispatchable: data[u.name] ? true : false\n      }))\n    };\n  }\n\n  return {\n    data: {\n      ...args\n    }\n  };\n};\n\nexport default Admin;\n","import theme from \"@theme-ui/preset-bootstrap\";\n\nimport nightOwl from \"@theme-ui/prism/presets/night-owl.json\";\n\nexport default {\n  breakpoints: [\"576px\", \"768px\", \"992px\", \"1200px\"],\n  colors: {\n    white: \"#fff\",\n    black: \"#000\",\n    gray: [\n      \"#fff\",\n      \"#f8f9fa\",\n      \"#e9ecef\",\n      \"#dee2e6\",\n      \"#ced4da\",\n      \"#adb5bd\",\n      \"#6c757d\",\n      \"#495057\",\n      \"#343a40\",\n      \"#212529\",\n    ],\n    blue: \"#007bff\",\n    indigo: \"#6610f2\",\n    purple: \"#6f42c1\",\n    pink: \"#e83e8c\",\n    red: \"#dc3545\",\n    orange: \"#fd7e14\",\n    yellow: \"#ffc107\",\n    green: \"#28a745\",\n    teal: \"#20c997\",\n    cyan: \"#17a2b8\",\n    grayDark: \"#343a40\",\n    text: \"#212529\",\n    background: \"#fff\",\n    primary: \"#007bff\",\n    secondary: \"#6c757d\",\n    muted: \"#dee2e6\",\n    success: \"#28a745\",\n    info: \"#17a2b8\",\n    warning: \"#ffc107\",\n    danger: \"#dc3545\",\n    light: \"#f8f9fa\",\n    dark: \"#343a40\",\n    textMuted: \"#6c757d\",\n  },\n  space: [\"0rem\", \"0.25rem\", \"0.5rem\", \"1rem\", \"1.5rem\", \"3rem\"],\n  fonts: {\n    body:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n    heading: \"inherit\",\n    monospace:\n      'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n    sans:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n  },\n  fontSizes: [\n    \"0.75rem\",\n    \"0.875rem\",\n    \"1rem\",\n    \"1.25rem\",\n    \"1.5rem\",\n    \"1.75rem\",\n    \"2rem\",\n    \"2.5rem\",\n    \"3.5rem\",\n    \"4.5rem\",\n    \"5.5rem\",\n    \"6rem\",\n  ],\n  fontWeights: {\n    body: 400,\n    heading: 500,\n    bold: 700,\n    light: 300,\n    normal: 400,\n    display: 300,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.2,\n  },\n  sizes: {\n    sm: 540,\n    md: 720,\n    lg: 960,\n    xl: 1140,\n  },\n  shadows: {\n    default: \"0 .5rem 1rem rgba(0, 0, 0, .15)\",\n    sm: \"0 .125rem .25rem rgba(0, 0, 0, .075)\",\n    lg: \"0 1rem 3rem rgba(0, 0, 0, .175)\",\n  },\n  radii: {\n    default: \"0.25rem\",\n    sm: \"0.2rem\",\n    lg: \"0.3rem\",\n    pill: \"50rem\",\n  },\n  alerts: {\n    primary: {\n      color: \"white\",\n      bg: \"primary\",\n    },\n    error: {\n      bg: \"danger\",\n    },\n    success: {\n      bg: \"success\",\n    },\n  },\n\n  heading: {\n    fontFamily: \"heading\",\n    fontWeight: \"heading\",\n    lineHeight: \"heading\",\n    mt: 0,\n    mb: 2,\n  },\n  display: {\n    fontWeight: \"display\",\n    lineHeight: \"heading\",\n  },\n  forms: {\n    label: {\n      fontSize: 1,\n      fontWeight: \"bold\",\n    },\n  },\n\n  buttons: {\n    primary: {\n      color: \"white\",\n      bg: \"primary\",\n    },\n    link: {\n      bg: \"transparent\",\n      color: \"primary\",\n    },\n    success: {\n      bg: \"success\",\n    },\n    secondary: {\n      color: \"black\",\n      bg: \"secondary\",\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      lineHeight: \"body\",\n      fontWeight: \"body\",\n    },\n    a: {\n      color: \"primary\",\n      textDecoration: \"none\",\n      \":hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    p: {\n      mb: 3,\n      lineHeight: \"body\",\n    },\n    h1: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 7,\n    },\n    h2: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 6,\n    },\n    h3: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 5,\n    },\n    h4: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 4,\n    },\n    h5: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 3,\n    },\n    h6: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 2,\n    },\n    blockquote: {\n      fontSize: 3,\n      mb: 3,\n    },\n    table: {\n      width: \"100%\",\n      marginBottom: 3,\n      color: \"gray.9\",\n      borderCollapse: \"collapse\",\n    },\n    th: {\n      verticalAlign: \"bottom\",\n      borderTopWidth: 2,\n      borderTopStyle: \"solid\",\n      borderTopColor: \"gray.3\",\n      borderBottomWidth: 2,\n      borderBottomStyle: \"solid\",\n      borderBottomColor: \"gray.3\",\n      padding: \".75rem\",\n      textAlign: \"inherit\",\n    },\n    td: {\n      borderBottomWidth: 2,\n      borderBottomStyle: \"solid\",\n      borderBottomColor: \"gray.3\",\n      verticalAlign: \"top\",\n      padding: \".75rem\",\n    },\n    inlineCode: {\n      color: \"pink\",\n    },\n    img: {\n      maxWidth: \"100%\",\n      height: \"auto\",\n    },\n  },\n\n  // styles: {\n  //   ...theme.styles,\n  //   padding: \"1rem\",\n  //   table: {\n  //     width: \"100%\",\n  //     my: 4,\n  //     // borderColor: colors.gray,\n  //     borderCollapse: \"separate\",\n  //     borderSpacing: 0\n  //   },\n\n  //   code: {\n  //     ...nightOwl\n  //   }\n  // }\n};\n","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport { isLoggedIn, isAdmin } from \"../services/auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) =>\n  isLoggedIn() && isAdmin() ? (\n    <Component {...rest} />\n  ) : (\n    <Redirect from=\"\" to=\"/admin/login\" noThrow />\n  );\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Component {...rest} />\n);\n\nexport { ProtectedRoute, PublicRoute };\n","import React, { useEffect } from \"react\";\nimport { Button, Label, Input, Box, Heading, Flex } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\n\nimport gql from \"graphql-tag\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { setToken, isLoggedIn } from \"../../services/auth\";\nimport { navigate } from \"@reach/router\";\n\nconst LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  const [login, { data, loading, error }] = useMutation(LOGIN);\n  const { register, handleSubmit } = useForm();\n  const onLogin = values => {\n    login({\n      variables: { email: values.email, password: values.password }\n    });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn()) {\n      navigate(\"/admin\");\n    }\n    if (data && data.login.token) {\n      setToken(data.login.token);\n      navigate(\"/admin\");\n    }\n  }, [data, error]);\n\n  return (\n    <Flex\n      sx={{\n        minHeight: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Box as=\"form\" sx={{ width: \"300px\" }} onSubmit={handleSubmit(onLogin)}>\n        <Box>\n          <Heading p={3} as=\"h3\">\n            Watchower Admin\n          </Heading>\n          <Box p={3}>\n            <Label>Email Address</Label>\n            <Input type=\"email\" name=\"email\" ref={register} />\n          </Box>\n          <Box p={3}>\n            <Label>Password</Label>\n            <Input type=\"password\" name=\"password\" ref={register} />\n          </Box>\n\n          <Box p={3}>\n            <Button block type=\"submit\">\n              {loading ? \"Logging in...\" : \"Login\"}\n            </Button>\n            {error && <Box>{error.message}</Box>}\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Button, Label, Input, Box, Heading, Text, Select } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\n\nimport gql from \"graphql-tag\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useToasts } from \"../../components/Toasts\";\n\nconst GET_AGENCIES = gql`\n  query GetAgencies($where: AgencyWhereInput) {\n    agencies(where: $where) {\n      id\n      name\n    }\n  }\n`;\n\nconst INVITE_USER = gql`\n  mutation InviteUser(\n    $email: String!\n    $agencyId: ID!\n    $role: Role!\n    $name: String!\n  ) {\n    sendInviteEmail(\n      email: $email\n      agencyId: $agencyId\n      role: $role\n      name: $name\n    ) {\n      success\n    }\n  }\n`;\n\nexport default function UserManagement() {\n  const [invite, { loading }] = useMutation(INVITE_USER);\n  const { data: agencies, loading: loadingAgencies } = useQuery(GET_AGENCIES);\n  const { register, handleSubmit } = useForm();\n  const { add } = useToasts();\n\n  const onInvite = async values => {\n    try {\n      const res = await invite({\n        variables: {\n          email: values.email,\n          role: values.role || \"USER\",\n          name: values.name,\n          agencyId: values.agencyId\n        }\n      });\n\n      if (\n        res.data &&\n        res.data.sendInviteEmail &&\n        res.data.sendInviteEmail.success\n      ) {\n        add({ content: \"User Invited!\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  return (\n    <Layout withNav={true} bannerChildren=\"User Management\">\n      <Box\n        sx={{ maxWidth: \"1200px\", margin: \"auto\" }}\n        py={45}\n        as=\"form\"\n        onSubmit={handleSubmit(onInvite)}\n      >\n        <Heading as=\"h1\">Invite Users</Heading>\n        <Text>Invite users to agencies.</Text>\n\n        <Box>\n          <Box py={25}>\n            <Label>Agencies</Label>\n\n            <Select type=\"select\" name=\"agencyId\" ref={register}>\n              {loadingAgencies ? (\n                <option>loading...</option>\n              ) : agencies ? (\n                agencies.agencies.map(a => (\n                  <option value={a.id}>{a.name}</option>\n                ))\n              ) : (\n                <option>No agencies</option>\n              )}\n            </Select>\n          </Box>\n          <Box py={25}>\n            <Label>Email Address</Label>\n            <Input\n              type=\"select\"\n              name=\"email\"\n              ref={register({ required: true })}\n            />\n          </Box>\n          <Box py={25}>\n            <Label>Name</Label>\n            <Input name=\"name\" ref={register({ required: true })} />\n          </Box>\n          <Box py={25}>\n            <Label>Role</Label>\n\n            <Select type=\"select\" name=\"role\" ref={register}>\n              <option value={\"USER\"}>User</option>\n              <option value={\"ADMIN\"}>Admin</option>\n            </Select>\n          </Box>\n\n          <Box py={25}>\n            <Button block type=\"submit\">\n              {loading ? \"Inviting in...\" : \"Invite\"}\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Box, Heading, Spinner, Flex, Select } from \"theme-ui\";\n\nimport gql from \"graphql-tag\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\n\nexport const sevenDaysAgo = moment().subtract(7, \"days\");\nexport const thirtyDaysAgo = moment().subtract(30, \"days\");\n\nconst dateRangeOptions = [\n  {\n    value: {\n      startDate: sevenDaysAgo,\n      endDate: moment()\n    },\n    label: \"Last 7 days\"\n  },\n  {\n    value: {\n      startDate: moment().startOf(\"day\"),\n      endDate: moment()\n    },\n    label: \"Today\"\n  },\n  {\n    value: {\n      startDate: thirtyDaysAgo,\n      endDate: moment().endOf(\"day\")\n    },\n    label: \"Last 30 days\"\n  }\n];\n\nconst GET_AGENCIES = gql`\n  query GetAgencies(\n    $where: AgencyWhereInput\n    $submissionWhereInput: SubmissionWhereInput\n  ) {\n    agencies(where: $where) {\n      id\n      name\n      submissionCount(where: $submissionWhereInput)\n    }\n  }\n`;\n\nexport default function AgencyActivity() {\n  const [dateRange, setDateRange] = useState(0);\n\n  const { data, loading: loadingAgencies } = useQuery(GET_AGENCIES, {\n    variables: {\n      submissionWhereInput: {\n        createdAt: {\n          gt: dateRangeOptions[dateRange].value.startDate.toISOString(),\n          lt: dateRangeOptions[dateRange].value.endDate.toISOString()\n        }\n      }\n    }\n  });\n\n  return (\n    <Layout withNav={true} bannerChildren=\"User Management\">\n      <Box sx={{ maxWidth: \"1200px\", margin: \"auto\" }} py={45}>\n        <Heading as=\"h1\">Agency Activity</Heading>\n        {loadingAgencies ? (\n          <Flex\n            sx={{\n              height: \"500px\",\n              width: \"100%\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <Spinner />\n          </Flex>\n        ) : (\n          <Box>\n            <Box py={45}>\n              <Select\n                id=\"dateRange\"\n                value={dateRange}\n                onChange={e => {\n                  setDateRange(e.target.value);\n                }}\n              >\n                {dateRangeOptions.map((i, k) => (\n                  <option name={i.label} value={k}>\n                    {i.label}\n                  </option>\n                ))}\n              </Select>\n            </Box>\n            <Box as=\"table\">\n              <Box as=\"thead\">\n                <Box as=\"tr\">\n                  <Box as=\"th\">Agency Name</Box>\n                  <Box as=\"th\"> Incident Count</Box>\n                </Box>\n              </Box>\n              <tbody>\n                {data &&\n                  data.agencies.map(a => {\n                    return (\n                      <Box as=\"tr\">\n                        <Box as=\"td\" p={10}>\n                          {a.name}\n                        </Box>\n                        <Box as=\"td\" p={10}>\n                          {a.submissionCount > 29 ? \"30+\" : a.submissionCount}\n                        </Box>\n                      </Box>\n                    );\n                  })}\n              </tbody>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Button, Label, Input, Box, Heading, Select, Spinner } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\nimport { useTable } from \"react-table\";\nimport styled from \"@emotion/styled\";\nimport gql from \"graphql-tag\";\n\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport { useToasts } from \"../../components/Toasts\";\nimport { checkFieldIsDirty } from \"../../utils\";\nimport uniqWith from \"lodash/uniqWith\";\n\nconst GET_AGENCY_DETAILS = gql`\n  query GetAgencyDetails($id: String!) {\n    agencies(where: { id: { equals: $id } }) {\n      id\n      name\n      users {\n        id\n        name\n        email\n        role\n        isSignedUp\n      }\n      activities(orderBy: { label: asc }) {\n        id\n        label\n        subLabelOne\n        subLabelTwo\n        subLabelThree\n      }\n      settings {\n        id\n        surflineSpotId\n        dispatching\n        incidentReporting\n        epcr\n      }\n    }\n  }\n`;\n\nconst GET_AGENCIES = gql`\n  query GetAgencies($where: AgencyWhereInput) {\n    agencies(where: $where) {\n      id\n      name\n    }\n  }\n`;\n\nconst UPDATE_AGENCY = gql`\n  mutation UpdateAgency(\n    $where: AgencyWhereUniqueInput!\n    $data: AgencyUpdateInput!\n  ) {\n    updateOneAgency(where: $where, data: $data) {\n      id\n    }\n  }\n`;\n\nconst RE_SEND_INVITE = gql`\n  mutation ResendInvite($email: String!) {\n    resendInviteEmail(email: $email) {\n      success\n    }\n  }\n`;\n\nexport default function UserManagement() {\n  const [selectedAgencyId, selectAgency] = useState(null);\n  const [updateOneAgency, { loading }] = useMutation(UPDATE_AGENCY, {\n    refetchQueries: [\"GetAgencyDetails\"],\n  });\n  const [resendInvite, { loading: resendingInvite }] = useMutation(\n    RE_SEND_INVITE\n  );\n  const { data: agencies, loading: loadingAgencies } = useQuery(GET_AGENCIES);\n  const [loadAgency, { loading: loadingAgency, data }] = useLazyQuery(\n    GET_AGENCY_DETAILS\n  );\n\n  const { register, handleSubmit, errors, formState, reset } = useForm({\n    mode: \"onChange\",\n  });\n\n  const { dirty, isSubmitting, touched, submitCount, dirtyFields } = formState;\n\n  const defaultFormValues = {\n    ...(data && data.agencies[0]),\n    ...(data && data.agencies[0].settings),\n  };\n  const { add } = useToasts();\n\n  useEffect(() => {\n    if (selectedAgencyId) {\n      loadAgency({\n        variables: {\n          id: selectedAgencyId,\n        },\n      });\n    }\n  }, [selectedAgencyId]);\n\n  const dirtyFieldsArray = Array.from(dirtyFields);\n\n  const onUpdate = async (values) => {\n    console.log(dirtyFields);\n    try {\n      if (!dirty) {\n        add({ content: \"No updates made.\", variant: \"error\" });\n        return;\n      }\n      if (!selectedAgencyId) {\n        add({\n          content: \"Please select an agency to update.\",\n          variant: \"error\",\n        });\n        return;\n      }\n      let connections = {};\n      if (\n        checkFieldIsDirty(dirtyFieldsArray, \"surflineSpotId\") &&\n        values.surflineSpotId\n      ) {\n        connections.settings = {\n          update: {\n            surflineSpotId: values.surflineSpotId,\n          },\n        };\n      }\n\n      let updatedActivities = [];\n      let newActivities = [];\n\n      dirtyFieldsArray.length > 0 &&\n        uniqWith(dirtyFieldsArray, (i, b) => {\n          console.log(\n            i.split(/\\.(?=[^\\.]+$)/)[0] === b.split(/\\.(?=[^\\.]+$)/)[0]\n          );\n          return i.split(/\\.(?=[^\\.]+$)/)[0] === b.split(/\\.(?=[^\\.]+$)/)[0];\n        }).map((d) => {\n          if (d.includes(\"activities\")) {\n            const split = d.split(\".\");\n            const currentLabel = values.activities[split[1]];\n\n            if (split[1].startsWith(\"newLabel\")) {\n              newActivities.push({\n                label: createActivtyTypeLabel(\n                  currentLabel.subLabelOne,\n                  currentLabel.subLabelTwo,\n                  currentLabel.subLabelThree\n                ),\n              });\n              return;\n            }\n\n            updatedActivities.push({\n              where: { id: split[1] },\n              data: {\n                label: createActivtyTypeLabel(\n                  currentLabel.subLabelOne,\n                  currentLabel.subLabelTwo,\n                  currentLabel.subLabelThree\n                ),\n              },\n            });\n          }\n          return;\n        });\n\n      if (updatedActivities.length > 0) {\n        connections.activities = {\n          update: updatedActivities,\n        };\n      }\n\n      if (newActivities.length > 0) {\n        connections.activities = {\n          create: newActivities,\n        };\n      }\n\n      const res = await updateOneAgency({\n        variables: {\n          where: {\n            id: selectedAgencyId,\n          },\n          data: {\n            ...connections,\n          },\n        },\n      });\n\n      if (res.data && res.data.updateOneAgency && res.data.updateOneAgency.id) {\n        add({ content: \"Agency Updated\", variant: \"success\" });\n        reset();\n      }\n    } catch (e) {\n      console.log(e.message);\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  const onResendInvite = async (args) => {\n    try {\n      if (!selectedAgencyId) {\n        add({ content: \"Please select an agency to update\", variant: \"error\" });\n        return;\n      }\n\n      const res = await resendInvite(args);\n\n      if (\n        res.data &&\n        res.data.resendInviteEmail &&\n        res.data.resendInviteEmail.success\n      ) {\n        add({ content: \"Sent!\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  return (\n    <Layout\n      withNav={true}\n      bannerChildren=\"User Management\"\n      loading={resendingInvite}\n    >\n      <Box sx={{ maxWidth: \"1200px\", margin: \"auto\" }} py={45}>\n        <Heading as=\"h1\">Update Agency</Heading>\n        <Box py={25}>\n          <Select\n            onChange={(e) => selectAgency(e.target.value)}\n            type=\"select\"\n            name=\"agencyId\"\n          >\n            {loadingAgencies ? (\n              <option>loading...</option>\n            ) : agencies ? (\n              [\n                <option value=\"\">Select an agency</option>,\n                ...agencies.agencies.map((a) => (\n                  <option value={a.id}>{a.name}</option>\n                )),\n              ]\n            ) : (\n              <option>No agencies</option>\n            )}\n          </Select>\n        </Box>\n\n        <Box>\n          {loadingAgency ? (\n            <Spinner />\n          ) : (\n            <Box as=\"form\" onSubmit={handleSubmit(onUpdate)}>\n              <Box py={25}>\n                <Label>Name</Label>\n                <Input\n                  type=\"select\"\n                  name=\"name\"\n                  defaultValue={defaultFormValues.name}\n                  ref={register({\n                    required: false,\n                    minLength: {\n                      value: 3,\n                      message: \"Make sure the name is long enough.\",\n                    },\n                  })}\n                />\n                <FormError error={errors.name} />\n              </Box>\n              <Box py={25}>\n                <Label>Surfline Id</Label>\n                <Input\n                  type=\"select\"\n                  name=\"surflineSpotId\"\n                  defaultValue={defaultFormValues.surflineSpotId}\n                  ref={register({\n                    required: false,\n                    minLength: {\n                      value: 15,\n                      message:\n                        \"Spot ids should looks something like this: 5842041f4e65fad6a77089fa\",\n                    },\n                  })}\n                />\n                <FormError error={errors.surflineSpotId} />\n              </Box>\n              <Box>\n                {data && data.agencies[0].activities ? (\n                  <Box py={25}>\n                    <h2>Categories </h2>\n                    <ActivitiesTable\n                      data={data.agencies[0].activities}\n                      registerForm={register}\n                      dirtyFields={dirtyFieldsArray}\n                    />\n                    <FormError error={errors.activities} />\n                  </Box>\n                ) : (\n                  <Fragment />\n                )}\n              </Box>\n              <Box py={25}>\n                <Button block type=\"submit\">\n                  {loading ? \"Updating...\" : \"Update\"}\n                </Button>\n              </Box>\n            </Box>\n          )}\n\n          {data && data.agencies[0].users ? (\n            <Box py={25}>\n              <h2>Users </h2>\n              <UserTable\n                data={data.agencies[0].users}\n                resendInvite={onResendInvite}\n              />\n              <FormError error={errors.users} />\n            </Box>\n          ) : (\n            <Fragment />\n          )}\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n\nconst FormError = ({ error }) => {\n  if (!error) return <Fragment />;\n  return <Box color=\"red\">{error.message}</Box>;\n};\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.value}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst UserTable = ({ data, resendInvite }) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"Role\",\n        accessor: \"role\",\n      },\n      {\n        Header: \"Registered\",\n        accessor: (value) => {\n          return value.isSignedUp === true ? \"Yes\" : \"No\";\n        },\n      },\n      {\n        Header: \"Resend Invite \",\n        accessor: (value) => {\n          if (value.isSignedUp === false && value.email) {\n            return (\n              <Button\n                onClick={() =>\n                  resendInvite({\n                    variables: {\n                      email: value.email,\n                    },\n                  })\n                }\n                variant=\"link\"\n                sx={{ variant: \"link\" }}\n              >\n                Resend Invite\n              </Button>\n            );\n          }\n          return <Fragment />;\n        },\n      },\n    ],\n    []\n  );\n\n  const tableData = React.useMemo(() => data, []);\n  return (\n    <Styled>\n      <Table columns={columns} data={tableData} />\n    </Styled>\n  );\n};\n\nconst ActivitiesTable = ({ data, dirtyFields, registerForm }) => {\n  const [tableData, setTableData] = useState(data);\n\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Label\",\n        accessor: \"label\",\n      },\n      {\n        Header: \"Label One\",\n        accessor: (value) => {\n          const fieldName = `activities.${value.id}.subLabelOne`;\n          return (\n            <Input\n              name={fieldName}\n              defaultValue={value.subLabelOne}\n              sx={{\n                border: dirtyFields.includes(fieldName)\n                  ? \"3px solid green\"\n                  : \"1px solid black\",\n              }}\n              ref={registerForm({\n                required: false,\n              })}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Label Two\",\n        accessor: (value) => {\n          const fieldName = `activities.${value.id}.subLabelTwo`;\n          return (\n            <Input\n              name={fieldName}\n              defaultValue={value.subLabelTwo}\n              sx={{\n                border: dirtyFields.includes(fieldName)\n                  ? \"3px solid green\"\n                  : \"1px solid black\",\n              }}\n              ref={registerForm({\n                required: false,\n              })}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Label Three\",\n        accessor: (value) => {\n          const fieldName = `activities.${value.id}.subLabelThree`;\n          return (\n            <Input\n              name={fieldName}\n              defaultValue={value.subLabelThree}\n              sx={{\n                border: dirtyFields.includes(fieldName)\n                  ? \"3px solid green\"\n                  : \"1px solid black\",\n              }}\n              ref={registerForm({\n                required: false,\n              })}\n            />\n          );\n        },\n      },\n    ],\n    [dirtyFields]\n  );\n\n  return (\n    <Styled>\n      <Table columns={columns} data={tableData} />\n      <Button\n        type=\"button\"\n        sx={{ marginTop: 10 }}\n        onClick={() =>\n          setTableData((prev) => [\n            ...prev,\n            {\n              id: \"newLabel\" + (prev.length + 1),\n              label: \"\",\n              subLabelOne: \"\",\n              subLabelTwo: \"\",\n              subLabelThree: \"\",\n            },\n          ])\n        }\n      >\n        + Add New Label\n      </Button>\n    </Styled>\n  );\n};\n\nexport const createActivtyTypeLabel = (labelOne, labelTwo, labelThree) => {\n  if (!labelThree && !labelTwo) {\n    return `${labelOne}`;\n  }\n  if (!labelThree) {\n    return `${labelOne} / ${labelTwo}`;\n  }\n  return `${labelOne} / ${labelTwo} / ${labelThree}`;\n};\n\nconst Styled = styled.div`\n  padding: 1rem;\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    border-radius: 4px;\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th {\n      background-color: ${(props) => {\n        return props.theme.colors[\"grayDark\"];\n      }};\n      text-align: left;\n      padding: 1rem;\n      color: white;\n    }\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Button, Label, Input, Box, Heading, Select, Spinner } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\nimport { useTable } from \"react-table\";\nimport styled from \"@emotion/styled\";\nimport gql from \"graphql-tag\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useToasts } from \"../../components/Toasts\";\nimport { isEmpty } from \"lodash\";\n\nconst GET_AGENCIES = gql`\n  query GetAgencies($where: AgencyWhereInput) {\n    agencies(where: $where) {\n      id\n      name\n    }\n  }\n`;\n\nconst CREATE_NOTIFICATION = gql`\n  mutation CreateNotification($data: NotificationMessageCreateInput!) {\n    createOneNotificationMessage(data: $data) {\n      id\n    }\n  }\n`;\n\nexport default function UserManagement() {\n  const [selectedAgencyId, selectAgency] = useState(null);\n  const [createNotification, { loading }] = useMutation(CREATE_NOTIFICATION);\n\n  const { data: agencies, loading: loadingAgencies } = useQuery(GET_AGENCIES);\n\n  const { register, handleSubmit, errors, formState, reset } = useForm({\n    mode: \"onChange\",\n  });\n\n  const { dirty } = formState;\n\n  const { add } = useToasts();\n\n  const onCreate = async (values) => {\n    try {\n      let connections = {};\n      console.log(dirty, values);\n      if (isEmpty(values)) {\n        add({ content: \"No updates made.\", variant: \"error\" });\n        return;\n      }\n\n      if (selectedAgencyId) {\n        connections.agencies = {\n          connect: {\n            id: selectedAgencyId,\n          },\n        };\n      }\n      console.log(values);\n      const res = await createNotification({\n        variables: {\n          data: {\n            global: selectedAgencyId ? false : true,\n            ...values,\n            ...connections,\n          },\n        },\n      });\n\n      if (\n        res.data &&\n        res.data.createOneNotificationMessage &&\n        res.data.createOneNotificationMessage.id\n      ) {\n        add({ content: \"Notified!\", variant: \"success\" });\n        reset();\n      }\n    } catch (e) {\n      console.log(e.message);\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  return (\n    <Layout withNav={true} bannerChildren=\"Notifications\" loading={loading}>\n      <Box sx={{ maxWidth: \"1200px\", margin: \"auto\" }} py={45}>\n        <Heading as=\"h1\">Create Notification</Heading>\n        <Box as=\"form\" onSubmit={handleSubmit(onCreate)}>\n          <Box py={25}>\n            <Select\n              onChange={(e) => selectAgency(e.target.value)}\n              type=\"select\"\n              name=\"agencyId\"\n            >\n              {loadingAgencies ? (\n                <option>loading...</option>\n              ) : agencies ? (\n                [\n                  <option value=\"\">Select an agency</option>,\n                  ...agencies.agencies.map((a) => (\n                    <option value={a.id}>{a.name}</option>\n                  )),\n                ]\n              ) : (\n                <option value>All agencies</option>\n              )}\n            </Select>\n          </Box>\n\n          <Box py={25}>\n            <Label>Message</Label>\n            <Input\n              name=\"message\"\n              ref={register({\n                required: true,\n              })}\n            />\n            <FormError error={errors.message} />\n          </Box>\n          <Box py={25}>\n            <Label>Url</Label>\n            <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n              Must be a full url (https://google.com) or a route in the app\n              (agency/dispatches)\n            </Box>\n            <Input\n              name=\"url\"\n              ref={register({\n                required: false,\n              })}\n            />\n            <FormError error={errors.url} />\n          </Box>\n          <Box py={25}>\n            <Button block type=\"submit\">\n              {loading ? \"Updating...\" : \"Update\"}\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n\nconst FormError = ({ error }) => {\n  if (!error) return <Fragment />;\n  return <Box color=\"red\">{error.message}</Box>;\n};\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.value}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst UserTable = ({ data, resendInvite }) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"Role\",\n        accessor: \"role\",\n      },\n      {\n        Header: \"Registered\",\n        accessor: (value) => {\n          return value.isSignedUp === true ? \"Yes\" : \"No\";\n        },\n      },\n      {\n        Header: \"Resend Invite \",\n        accessor: (value) => {\n          if (value.isSignedUp === false && value.email) {\n            return (\n              <Button\n                onClick={() =>\n                  resendInvite({\n                    variables: {\n                      email: value.email,\n                    },\n                  })\n                }\n                variant=\"link\"\n                sx={{ variant: \"link\" }}\n              >\n                Resend Invite\n              </Button>\n            );\n          }\n          return <Fragment />;\n        },\n      },\n    ],\n    []\n  );\n\n  const tableData = React.useMemo(() => data, []);\n  return (\n    <Styled>\n      <Table columns={columns} data={tableData} />\n    </Styled>\n  );\n};\n\nconst ActivitiesTable = ({ data, dirtyFields, registerForm }) => {\n  const [tableData, setTableData] = useState(data);\n\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Label\",\n        accessor: \"label\",\n      },\n      {\n        Header: \"Label One\",\n        accessor: (value) => {\n          const fieldName = `activities.${value.id}.subLabelOne`;\n          return (\n            <Input\n              name={fieldName}\n              defaultValue={value.subLabelOne}\n              sx={{\n                border: dirtyFields.includes(fieldName)\n                  ? \"3px solid green\"\n                  : \"1px solid black\",\n              }}\n              ref={registerForm({\n                required: false,\n              })}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Label Two\",\n        accessor: (value) => {\n          const fieldName = `activities.${value.id}.subLabelTwo`;\n          return (\n            <Input\n              name={fieldName}\n              defaultValue={value.subLabelTwo}\n              sx={{\n                border: dirtyFields.includes(fieldName)\n                  ? \"3px solid green\"\n                  : \"1px solid black\",\n              }}\n              ref={registerForm({\n                required: false,\n              })}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Label Three\",\n        accessor: (value) => {\n          const fieldName = `activities.${value.id}.subLabelThree`;\n          return (\n            <Input\n              name={fieldName}\n              defaultValue={value.subLabelThree}\n              sx={{\n                border: dirtyFields.includes(fieldName)\n                  ? \"3px solid green\"\n                  : \"1px solid black\",\n              }}\n              ref={registerForm({\n                required: false,\n              })}\n            />\n          );\n        },\n      },\n    ],\n    [dirtyFields]\n  );\n\n  return (\n    <Styled>\n      <Table columns={columns} data={tableData} />\n      <Button\n        type=\"button\"\n        sx={{ marginTop: 10 }}\n        onClick={() =>\n          setTableData((prev) => [\n            ...prev,\n            {\n              id: \"newLabel\" + (prev.length + 1),\n              label: \"\",\n              subLabelOne: \"\",\n              subLabelTwo: \"\",\n              subLabelThree: \"\",\n            },\n          ])\n        }\n      >\n        + Add New Label\n      </Button>\n    </Styled>\n  );\n};\n\nexport const createActivtyTypeLabel = (labelOne, labelTwo, labelThree) => {\n  if (!labelThree && !labelTwo) {\n    return `${labelOne}`;\n  }\n  if (!labelThree) {\n    return `${labelOne} / ${labelTwo}`;\n  }\n  return `${labelOne} / ${labelTwo} / ${labelThree}`;\n};\n\nconst Styled = styled.div`\n  padding: 1rem;\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    border-radius: 4px;\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th {\n      background-color: ${(props) => {\n        return props.theme.colors[\"grayDark\"];\n      }};\n      text-align: left;\n      padding: 1rem;\n      color: white;\n    }\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"theme-ui\";\n\nimport \"./styles.css\";\n\nimport Onboarding from \"./routes/Onboarding\";\nimport Admin from \"./routes/admin\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport { Router } from \"@reach/router\";\nimport theme from \"./theme\";\nimport client from \"./services/Apollo\";\nimport { PublicRoute, ProtectedRoute } from \"./components/routes\";\nimport Login from \"./routes/admin/Login\";\nimport UserManagement from \"./routes/admin/UserManagement\";\nimport AgencyActivity from \"./routes/admin/Activity\";\nimport { ToastProvider } from \"./components/Toasts\";\nimport Prism from \"@theme-ui/prism\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport EditAgency from \"./routes/admin/EditAgency\";\nimport CreateNotifications from \"./routes/admin/CreateNotifications\";\n\nconst components = {\n  pre: ({ children }) => <>{children}</>,\n  code: Prism,\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme} components={components}>\n        <ModalProvider>\n          <ToastProvider>\n            <Router>\n              <PublicRoute component={Onboarding} path=\"/\" />\n              <ProtectedRoute path=\"admin\" component={Admin} />\n              <ProtectedRoute path=\"admin/users\" component={UserManagement} />\n              <ProtectedRoute path=\"admin/edit-agency\" component={EditAgency} />\n              <ProtectedRoute\n                path=\"admin/create-notifications\"\n                component={CreateNotifications}\n              />\n              <ProtectedRoute\n                path=\"admin/activity\"\n                component={AgencyActivity}\n              />\n              <PublicRoute component={Login} path=\"/admin/login\" />\n            </Router>\n          </ToastProvider>\n        </ModalProvider>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}