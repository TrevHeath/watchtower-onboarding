{"version":3,"sources":["components/checkboxTree/checkboxTree.js","components/Banner.js","config.js","services/Apollo.js","services/auth.js","components/Nav.js","components/Layout.js","routes/Onboarding.js","components/Toasts.js","utils.js","routes/admin/index.js","theme.js","components/routes.js","routes/admin/Login.js","routes/admin/UserManagement.js","routes/admin/Activity.js","routes/admin/EditAgency.js","index.js"],"names":["getNodeIds","nodes","ids","forEach","_ref","value","children","concat","Object","toConsumableArray","CustomCheckboxTree","_ref2","options","_useState","useState","_useState2","slicedToArray","setNodes","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","errors","setErrors","_useState7","_useState8","checked","setChecked","_useState9","_useState10","expanded","setExpanded","React","useEffect","react_default","a","createElement","dist_index_esm","as","onSubmit","e","preventDefault","agency","cleanChecked","map","i","split","fetch","process","method","headers","Accept","body","JSON","stringify","text","then","r","console","log","ok","alert","catch","form","handleSubmit","py","htmlFor","id","name","onChange","defineProperty","target","color","index_browser_default","optimisticToggle","noCascade","onCheck","onExpand","icons","check","className","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","Banner","sx","px","backgroundImage","backgroundSize","backgroundPosition","borderRadius","bg","position","zIndex","textAlign","fontSize","top","right","left","bottom","backgroundColor","opacity","dotenv","require","NODE_STAGE","config","staging","GRAPHQL_URL","production","REACT_APP_PRODUCTION_GRAPHQL_URL","slackUrl","flattenedConfig","_objectSpread","httpLink","createHttpLink","uri","authLink","setContext","_","token","cookie","load","Apollo_objectSpread","Authorization","client","ApolloClient","link","cache","InMemoryCache","isBrowser","window","getToken","gql","_templateObject","isLoggedIn","isAdmin","role","jwt","decode","getUserRole","logout","callback","remove","path","isActive","isCurrent","style","textDecoration","Nav","p","fontWeight","justifyContent","flex","es","getProps","to","href","onClick","event","navigate","Layout","withNav","bannerChildren","loading","width","mapToOptionTree","k","label","category","subCategories","sub","kSub","subSubCategories","subSub","kSubSub","Onboarding","values","setValues","categorySelect","inputValues","setInputValues","onInputChange","Onboarding_objectSpread","onAdd","normalizedValue","toLowerCase","word","toUpperCase","substr","join","trim","prevVals","newVals","c","push","error","mappedOptions","m","flexWrap","maxWidth","margin","borderBottom","pb","checkboxTree_CustomCheckboxTree","flexDirection","defaultValue","v","key","Ctx","createContext","ToastContainer","props","assign","Toast","onDismiss","rest","objectWithoutProperties","padding","toastCount","ToastProvider","_React$useState","_React$useState2","toasts","setToasts","newToasts","filter","t","Provider","add","_ref3","content","toast","Toasts_objectSpread","Toasts_ToastContainer","_ref4","Toasts_Toast","useToasts","useContext","toTitleCase","str","replace","txt","charAt","ONBOARD_AGENCY","admin_templateObject","CardFooter","height","formatGqlArgs","data","args","agencyName","activities","stats","surflineSpotId","users","create","u","positions","dispatchable","admin_objectSpread","Admin","_useMutation","useMutation","_useMutation2","onboard","gqlArgs","setGQLArgs","_useModal","useModal","lib_default","isOpen","keys","length","Fragment","generateSnippet","admin_CardFooter","marginRight","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","variables","sent","onboardAgency","variant","hideModal","t0","message","stop","_useModal2","showModal","handleCheckBoxChange","handleChange","field","cleanValue","removeFront","rows","mb","defaultChecked","theme","breakpoints","colors","white","black","gray","blue","indigo","purple","pink","red","orange","yellow","green","teal","cyan","grayDark","background","primary","secondary","muted","success","info","warning","danger","light","dark","textMuted","space","fonts","heading","monospace","sans","fontSizes","fontWeights","bold","normal","display","lineHeights","sizes","sm","md","lg","xl","shadows","default","radii","pill","typeStyles","fontFamily","lineHeight","mt","forms","alerts","buttons","styles","root",":hover","h1","h2","h3","h4","h5","h6","blockquote","table","marginBottom","borderCollapse","th","verticalAlign","borderTopWidth","borderTopStyle","borderTopColor","borderBottomWidth","borderBottomStyle","borderBottomColor","td","inlineCode","img","ProtectedRoute","Component","component","from","noThrow","PublicRoute","LOGIN","Login_templateObject","Login","login","_useMutation2$","_useForm","useForm","register","save","minHeight","alignItems","email","password","type","ref","block","GET_AGENCIES","UserManagement_templateObject","INVITE_USER","_templateObject2","UserManagement","invite","_useQuery","useQuery","agencies","loadingAgencies","onInvite","agencyId","sendInviteEmail","_x","apply","this","arguments","required","sevenDaysAgo","moment","subtract","thirtyDaysAgo","dateRangeOptions","startDate","endDate","startOf","endOf","Activity_templateObject","AgencyActivity","dateRange","setDateRange","submissionWhereInput","createdAt","gt","toISOString","lt","submissionCount","GET_AGENCY_DETAILS","EditAgency_templateObject","EditAgency_templateObject2","UPDATE_AGENCY","_templateObject3","RE_SEND_INVITE","_templateObject4","selectedAgencyId","selectAgency","updateOneAgency","_useMutation3","_useMutation4","resendInvite","resendingInvite","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadAgency","_useLazyQuery2$","loadingAgency","defaultFormValues","EditAgency_objectSpread","settings","onUpdate","abrupt","update","where","onResendInvite","_callee2","_context2","resendInviteEmail","_x2","minLength","EditAgency_FormError","EditAgency_UserTable","react","FormError","_ref5","Table","_ref6","columns","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","UserTable","_ref7","useMemo","Header","accessor","isSignedUp","tableData","Styled","styled","div","_templateObject5","components","pre","code","Prism","rootElement","document","getElementById","ReactDOM","react_common_esm","index_esm","index_es","routes_PublicRoute","routes_ProtectedRoute","EditAgency"],"mappings":"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","file":"static/js/main.be94d23c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport { Box, Button, Input, Label } from \"theme-ui\";\n\nimport \"./checkbox-styles.css\";\n\nconst slackUrl = process.env.REACT_APP_SLACK_URL;\n\nfunction getNodeIds(nodes) {\n  let ids = [];\n\n  nodes &&\n    nodes.forEach(({ value, children }) => {\n      ids = [...ids, value, ...getNodeIds(children)];\n    });\n\n  return ids;\n}\n\nexport const CustomCheckboxTree = ({ options }) => {\n  const [nodes, setNodes] = useState(options);\n  const [inputs, setInputs] = useState({});\n  const [errors, setErrors] = useState();\n  const [checked, setChecked] = useState();\n  const [expanded, setExpanded] = useState();\n\n  React.useEffect(() => {\n    setNodes(options);\n    setChecked(getNodeIds(options));\n    setExpanded(getNodeIds(options));\n  }, [options]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputs.agency) {\n      return setErrors({ agency: \"Please input an agency name\" });\n    }\n    setErrors({});\n\n    const cleanChecked = checked.map(i => i.split(\" -\")[0]);\n\n    fetch(slackUrl, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        text: ` ${inputs.agency} has submitted their stat form:, \\`\\`\\` ${cleanChecked}\\`\\`\\` `\n      })\n    })\n      .then(r => {\n        console.log(r);\n        if (r.ok === true) {\n          alert(\"Stat categories sent successfully\");\n        }\n      })\n      .catch(e => {\n        setErrors({ form: `Error submitting: ${e}` });\n      });\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={e => handleSubmit(e)}>\n      <Box py={3}>\n        <Label htmlFor=\"agency\">My Agency Name</Label>\n        <Input\n          id=\"agency\"\n          name=\"agency\"\n          onChange={e => {\n            setInputs({ [e.target.name]: e.target.value });\n          }}\n        />\n        {errors && errors.agency && <Box color=\"red\">{errors.agency}</Box>}\n      </Box>\n      <Box py={3}>\n        <CheckboxTree\n          nodes={nodes}\n          checked={checked}\n          expanded={expanded}\n          optimisticToggle={false}\n          noCascade={true}\n          onCheck={checked => {\n            return setChecked(checked);\n          }}\n          onExpand={expanded => setExpanded(expanded)}\n          icons={{\n            check: <span className=\"rct-icon rct-icon-check\" />,\n            uncheck: <span className=\"rct-icon rct-icon-uncheck\" />,\n            halfCheck: <span className=\"rct-icon rct-icon-half-check\" />,\n            expandClose: <span className=\"rct-icon rct-icon-expand-close\" />,\n            expandOpen: <span className=\"rct-icon rct-icon-expand-open\" />,\n            expandAll: <span className=\"rct-icon rct-icon-expand-all\" />,\n            collapseAll: <span className=\"rct-icon rct-icon-collapse-all\" />,\n            parentClose: null,\n            parentOpen: null,\n            leaf: null\n          }}\n        />\n      </Box>\n      <Button>Submit categories</Button>\n      {errors && errors.form && <Box color=\"red\">{errors.form}</Box>}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Box, Heading } from \"theme-ui\";\n\nexport default ({ children }) => {\n  return (\n    <Box\n      sx={{\n        px: 4,\n        py: \"10rem\",\n        backgroundImage:\n          \"url(https://images.unsplash.com/photo-1444762908691-c8461d64d5f6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=3300&q=80)\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        borderRadius: 8,\n        color: \"white\",\n        bg: \"gray\",\n        position: \"relative\"\n      }}\n    >\n      <Heading\n        sx={{\n          position: \"relative\",\n          zIndex: \"2\",\n          textAlign: \"center\",\n          fontSize: [5, 6]\n        }}\n        as=\"h4\"\n      >\n        {children}\n      </Heading>\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"0px\",\n          right: \"0px\",\n          left: \"0px\",\n          bottom: \"0px\",\n          zIndex: \"1\",\n          backgroundColor: \"rgb(51, 51, 51)\",\n          opacity: \"0.8\"\n        }}\n      />\n    </Box>\n  );\n};\n","const dotenv = require(\"dotenv\");\n\n// require and configure dotenv, will load vars in .env in PROCESS.ENV\nif (process.env.NODE_STAGE !== \"production\") {\n  dotenv.config();\n}\n\nconst config = {\n  staging: { GRAPHQL_URL: process.env.REACT_APP_STAGING_GRAPHQL_URL },\n  production: {\n    GRAPHQL_URL: process.env.REACT_APP_PRODUCTION_GRAPHQL_URL\n  },\n  slackUrl: process.env.REACT_APP_SLACK_URL\n};\n\nconst flattenedConfig = {\n  ...config,\n  ...config[process.env.REACT_APP_STAGE]\n};\n\nexport default flattenedConfig;\n","import config from \"../config\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport cookie from \"react-cookies\";\n\nconst httpLink = createHttpLink({ uri: config.GRAPHQL_URL });\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from cookie if it exists\n  const token = cookie.load(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default client;\n","import React, { Fragment } from \"react\";\nimport cookie from \"react-cookies\";\nimport client from \"../services/Apollo\";\n\nimport jwt from \"jsonwebtoken\";\nimport gql from \"graphql-tag\";\n\n// helpful for debugging netlify identity\nconst logAuth = process.env.NODE_ENV === \"development\" && false; // set to true to turn on logging\nconst clog = (...args) => logAuth && console.log(...args);\n// helpful for debugging netlify identity\n\nexport const isBrowser = () => typeof window !== \"undefined\";\n\nconst GET_CURRENT_USER = gql`\n  query CurrentUser {\n    me {\n      id\n      email\n      name\n      role\n    }\n  }\n`;\n\nexport const getUser = () => {\n  return client\n    ? client\n        .query({ query: GET_CURRENT_USER })\n        .then(d => d.me)\n        .catch(() => {})\n    : null;\n};\n\nexport const getUserRole = () => {\n  if (!isLoggedIn()) return null;\n  const token = getToken();\n  return jwt.decode(token).role;\n};\n\nexport const setToken = token => cookie.save(\"token\", token, { path: \"/\" });\nexport const deleteToken = () => cookie.remove(\"token\", { path: \"/\" });\n\nexport const getToken = () => cookie.load(\"token\");\n// export const handleLogin = callback => {\n//   clog('isLoggedIn check', isLoggedIn())\n//   if (isLoggedIn()) {\n//     clog('logged in')\n//     callback(getUser())\n//   } else {\n//     clog('logging in...')\n//     netlifyIdentity.open()\n//     netlifyIdentity.on('login', user => {\n//       clog('logged in!', { user })\n//       setUser(user)\n//       callback(user)\n//     })\n//   }\n// }\n\nexport const isLoggedIn = () => {\n  if (!isBrowser()) return false;\n  // const user = getUser()\n  const user = getToken();\n  return !!user;\n};\n\nexport const isAdmin = () => {\n  if (!isBrowser()) return false;\n  const role = getUserRole();\n  if (!role) return false;\n  clog(\"isAdmin check\", { role });\n  return role === \"SUPER_ADMIN\";\n};\n\nexport const logout = callback => {\n  deleteToken();\n  callback();\n};\n\nexport const AdminOnly = ({ children }) => {\n  const isAdminRole = isAdmin();\n  if (!isAdminRole) {\n    return <Fragment />;\n  }\n  return children;\n};\n","import React from \"react\";\nimport { Flex, NavLink, Box } from \"theme-ui\";\nimport { Link, navigate } from \"@reach/router\";\nimport { logout } from \"../services/auth\";\n\nconst isActive = ({ isCurrent }) => {\n  return isCurrent\n    ? { style: { color: \"inherit\", textDecoration: \"underline\" } }\n    : null;\n};\n\nexport default () => {\n  return (\n    <Flex\n      as=\"nav\"\n      p={25}\n      sx={{\n        bg: \"black\",\n        color: \"white\",\n        fontWeight: \"bold\",\n        justifyContent: \"space-between\"\n      }}\n    >\n      <Flex sx={{ flex: 1 }}>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin\"\n          >\n            Create Agency\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/edit-agency\"\n          >\n            Edit Agency\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/users\"\n          >\n            Invite Users\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/activity\"\n          >\n            Activity\n          </Link>\n        </Box>\n      </Flex>\n      <Box p={2}>\n        <NavLink\n          href=\"/agency/stats\"\n          onClick={event => {\n            event.preventDefault();\n            logout(() => navigate(`/admin/login`));\n          }}\n        >\n          Logout\n        </NavLink>\n      </Box>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Box, Spinner } from \"theme-ui\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nexport default function Layout({ withNav, bannerChildren, children, loading }) {\n  return (\n    <Box sx={{ position: \"relative\" }}>\n      {loading && (\n        <Box sx={{ position: \"fixed\", top: 0, right: 0 }}>\n          <Spinner />\n        </Box>\n      )}\n      <Banner>{bannerChildren}</Banner>\n      {withNav && (\n        <Box sx={{ width: \"100%\" }}>\n          <Nav />\n        </Box>\n      )}\n      <Box p={45} sx={{ position: \"relative\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Button,\n  Box,\n  Flex,\n  Heading,\n  Text,\n  Input,\n  Label,\n  Select\n} from \"theme-ui\";\n\nimport { CustomCheckboxTree as CheckboxTree } from \"../components/checkboxTree/checkboxTree\";\nimport Layout from \"../components/Layout\";\n\nconst mapToOptionTree = options => {\n  return options.map((i, k) => ({\n    label: i.category,\n    value: `${i.category} - ${k}`,\n    children:\n      i.subCategories &&\n      i.subCategories.map((sub, kSub) => {\n        return {\n          label: sub,\n          value: `${i.category} / ${sub} - ${kSub}`,\n          children:\n            i.subSubCategories &&\n            i.subSubCategories.map((subSub, kSubSub) => {\n              return {\n                label: subSub,\n                value: `${i.category} / ${sub} / ${subSub} - ${kSub + kSubSub}`\n              };\n            })\n        };\n      })\n  }));\n};\n\nfunction normalizeString(str) {\n  return str\n    .toLowerCase()\n    .split(\" \")\n    .map(function(word) {\n      return word[0].toUpperCase() + word.substr(1);\n    })\n    .join(\" \")\n    .trim();\n}\n\nconst options = [\n  {\n    category: \"Rescues\",\n    subCategories: [\n      \"Rip Current\",\n      \"Surf\",\n      \"Pier\",\n      \"Rocks & Jetty\",\n      \"Inshore Holes\",\n      \"Other\"\n    ],\n    subSubCategories: [\"Swimmer\", \"Apparatus\", \"Other\"]\n  },\n  {\n    category: \"Preventative Action\",\n    subCategories: [\n      \"Rip Current\",\n      \"Surf\",\n      \"Pier\",\n      \"Rocks & Jetty\",\n      \"Inshore Holes\",\n      \"Other\"\n    ],\n    subSubCategories: [\"Swimmer\", \"Apparatus\", \"Other\"]\n  },\n  {\n    category: \"Minor Medical Aid\",\n    subCategories: [\n      \"Laceration\",\n      \"Abrasion\",\n      \"Fracture\",\n      \"Sprain or Strain\",\n      \"Head Neck Back Injury\",\n      \"Stingray\",\n      \"JellyFish\",\n      \"Other\"\n    ],\n    subSubCategories: [\"Skating\", \"Surfing\", \"Biking\", \"Other\"]\n  },\n  {\n    category: \"Major Medical Aid\",\n    subCategories: [\n      \"Laceration\",\n      \"Abrasion\",\n      \"Fracture\",\n      \"Sprain or Strain\",\n      \"Head Neck Back Injury\",\n      \"Stingray\",\n      \"JellyFish\",\n      \"Other\"\n    ],\n    subSubCategories: [\"Skating\", \"Surfing\", \"Biking\", \"Other\"]\n  },\n  {\n    category: \"Enforcement\",\n    subCategories: [\"Warning\", \"Citation\", \"PD Assist\", \"Arrest\"],\n    subSubCategories: [\n      \"BBQ\",\n      \"Alcohol\",\n      \"Fighting\",\n      \"Smoking\",\n      \"Unsafe Beach Activity\",\n      \"Other\"\n    ]\n  },\n  {\n    category: \"Missing Person\",\n    subCategories: [\"Child\", \"Adult\"],\n    subSubCategories: [\"Lost\", \"Found\"]\n  },\n  {\n    category: \"Contact\",\n    subCategories: [\n      \"Public Assist\",\n      \"Public Education\",\n      \"Providing Information\"\n    ]\n  },\n  {\n    category: \"Wildlife\",\n    subCategories: [\"Bird\", \"Mammal\", \"Shark\"],\n    subSubCategories: [\"Live\", \"Dead\", \"Injured\"]\n  },\n  {\n    category: \"Boat\",\n    subCategories: [\"Warning\", \"Tow\", \"Assist\", \"Rescue\"]\n  },\n  {\n    category: \"Attendance\",\n    subCategories: [\"Beach\", \"Surfers\", \"Bodyboarders\", \"Lagoon\"]\n  }\n];\n\nfunction Onboarding() {\n  const [values, setValues] = useState(options);\n  const [inputValues, setInputValues] = useState({ categorySelect: \"All\" });\n\n  const onInputChange = e => {\n    console.log(values);\n    setInputValues({ ...inputValues, [e.target.name]: e.target.value });\n  };\n\n  const onAdd = (value, name) => {\n    try {\n      const normalizedValue = normalizeString(value);\n      setValues(prevVals => {\n        let newVals;\n        if (name === \"category\") {\n          newVals = [\n            ...prevVals,\n            {\n              [name]: normalizedValue\n            }\n          ];\n        } else {\n          prevVals.forEach((c, i) => {\n            if (inputValues.categorySelect === \"All\") {\n              if (!prevVals[i][name]) {\n                prevVals[i][name] = [normalizedValue];\n              } else {\n                prevVals[i][name].push(normalizedValue);\n              }\n            } else {\n              if (inputValues.categorySelect === c.category) {\n                if (!prevVals[i][name]) {\n                  prevVals[i][name] = [normalizedValue];\n                } else {\n                  prevVals[i][name].push(normalizedValue);\n                }\n              }\n            }\n          });\n\n          newVals = prevVals;\n        }\n\n        return newVals;\n      });\n      setInputValues({\n        ...inputValues,\n        [name]: \"\"\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const mappedOptions = mapToOptionTree(values);\n\n  return (\n    <Layout withNav={false} bannerChildren=\"Watchtower Onboarding\">\n      <Box\n        m={2}\n        p={5}\n        sx={{\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          bg: \"blue\",\n          color: \"white\"\n        }}\n      >\n        Please fill out the below form to get your Watchtower configured to your\n        beach. If you have questions, please reach out to your Watchtower rep.\n      </Box>\n      <Flex\n        py={4}\n        sx={{ flexWrap: \"wrap\", maxWidth: \"1200px\", margin: \"auto\" }}\n      >\n        <Box\n          sx={{ width: [\"100%\", \"50%\"], borderBottom: \"1px solid lightgray\" }}\n          p={3}\n        >\n          <Heading pb={1}>Select Your Stat Categories</Heading>\n          <Text sx={{ fontSize: 13 }} pb={3}>\n            Check the categories you would like to capture\n          </Text>\n          <CheckboxTree options={mappedOptions} />\n        </Box>\n        <Flex p={3} sx={{ width: [\"100%\", \"50%\"], flexDirection: \"column\" }}>\n          <Heading pb={1}>Custom Categories</Heading>\n          <Text fontSize={13} pb={3}>\n            Custom categories will show in your checkbox tree\n          </Text>\n          <Flex py={3} sx={{ flexDirection: \"column\" }}>\n            <Box pb={2}>\n              <Label>Add Custom Category</Label>\n              <Input\n                value={inputValues.category || \"\"}\n                name=\"category\"\n                onChange={onInputChange}\n              />\n              <Box py={2}>\n                <Button onClick={() => onAdd(inputValues.category, \"category\")}>\n                  Add\n                </Button>\n              </Box>\n            </Box>\n          </Flex>\n          <Flex py={3} sx={{ flexDirection: \"column\" }}>\n            <Heading as=\"h4\" pb={1}>\n              Custom SubCategories\n            </Heading>\n            <Text fontSize={13} pb={3}>\n              Select the category you would like your sub and sub sub categories\n              to be added to.\n            </Text>\n            <Box py={2}>\n              <Label>Add to:</Label>\n              <Select\n                value={(inputValues && inputValues.categorySelect) || \"All\"}\n                name=\"categorySelect\"\n                onChange={onInputChange}\n                defaultValue=\"All\"\n              >\n                <option value={\"All\"}>{\"All\"}</option>\n                {values.map((v, i) => {\n                  return (\n                    <option key={i} value={v.category}>\n                      {v.category}\n                    </option>\n                  );\n                })}\n              </Select>\n            </Box>\n            <Box py={3}>\n              <Label>SubCategory</Label>\n              <Input\n                value={inputValues.subCategories || \"\"}\n                name=\"subCategories\"\n                onChange={onInputChange}\n              />\n              <Box py={2}>\n                <Button\n                  onClick={() =>\n                    onAdd(inputValues.subCategories, \"subCategories\")\n                  }\n                >\n                  Add\n                </Button>\n              </Box>\n            </Box>\n\n            <Box pb={2}>\n              <Label>SubSubCategory</Label>\n              <Input\n                value={inputValues.subSubCategories || \"\"}\n                name=\"subSubCategories\"\n                onChange={onInputChange}\n              />\n            </Box>\n\n            <Box>\n              <Button\n                onClick={() =>\n                  onAdd(inputValues.subSubCategories, \"subSubCategories\")\n                }\n              >\n                Add\n              </Button>\n            </Box>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Layout>\n  );\n}\n\nexport default Onboarding;\n","// @flow\n\nimport React from \"react\";\nimport { Alert } from \"theme-ui\";\n\nconst Ctx = React.createContext();\n\n// Styled Components\n// ==============================\n\nconst ToastContainer = props => (\n  <div\n    style={{ position: \"fixed\", right: 0, top: 0, zIndex: 1000 }}\n    {...props}\n  />\n);\nconst Toast = ({ children, onDismiss, ...rest }) => (\n  <Alert\n    style={{\n      margin: 10,\n      padding: 10\n    }}\n    onClick={onDismiss}\n    {...rest}\n  >\n    {children}\n  </Alert>\n);\n\n// Provider\n// ==============================\n\nlet toastCount = 0;\n\nexport function ToastProvider({ children }) {\n  const [toasts, setToasts] = React.useState([]);\n\n  const add = ({ content, ...rest }) => {\n    const id = toastCount++;\n    const toast = { content, id, ...rest };\n    console.log(toast);\n    setToasts([...toasts, toast]);\n  };\n  const remove = id => {\n    const newToasts = toasts.filter(t => t.id !== id);\n    setToasts(newToasts);\n  };\n  // avoid creating a new fn on every render\n  const onDismiss = id => () => remove(id);\n\n  return (\n    <Ctx.Provider value={{ add, remove }}>\n      {children}\n      <ToastContainer>\n        {toasts.map(({ content, id, ...rest }) => {\n          return (\n            <Toast key={id} Toast={Toast} onDismiss={onDismiss(id)} {...rest}>\n              {content}\n            </Toast>\n          );\n        })}\n      </ToastContainer>\n    </Ctx.Provider>\n  );\n}\n\n// Consumer\n// ==============================\n\nexport const useToasts = () => React.useContext(Ctx);\n","export function toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function(txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n","import React, { useState } from \"react\";\nimport { Input, Label, Text, Box, Button, Heading, Checkbox } from \"theme-ui\";\n\nimport Layout from \"../../components/Layout\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useModal } from \"react-modal-hook\";\nimport ReactModal from \"react-modal\";\nimport { useToasts } from \"../../components/Toasts\";\nimport { toTitleCase } from \"../../utils\";\n\nconst ONBOARD_AGENCY = gql`\n  mutation OnboardAgency($data: OnboardAgencyInput!) {\n    onboardAgency(data: $data) {\n      id\n    }\n  }\n`;\n\nconst CardFooter = ({ children }) => {\n  return (\n    <Box\n      p={25}\n      sx={{\n        position: \"absolute\",\n        bottom: 0,\n        right: 0,\n        left: 0,\n        height: \"auto\",\n        textAlign: \"right\"\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst Admin = () => {\n  const [onboard, { loading }] = useMutation(ONBOARD_AGENCY);\n  const [values, setValues] = useState({});\n  const [gqlArgs, setGQLArgs] = useState();\n  const { add } = useToasts();\n  const [showModal, hideModal] = useModal(\n    () => (\n      <ReactModal isOpen>\n        <Heading as=\"h1\">\n          Are you sure you would like to create this agency:\n        </Heading>\n\n        {Object.keys(values).length ? (\n          <>\n            {\" \"}\n            <Box p={45}>\n              <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n                <strong>\n                  Please review this for accuracy. It is difficule to undo a new\n                  agency.\n                </strong>\n              </Box>\n              {values.agencyName && (\n                <div>\n                  <Heading as=\"h3\">Agency:</Heading>\n                  {values.agencyName}\n                </div>\n              )}\n              {values.surflineSpotId && (\n                <div>\n                  <Heading as=\"h3\">SurflineSpotId:</Heading>\n                  {values.surflineSpotId}\n                </div>\n              )}\n              {values.stats && (\n                <div>\n                  <Heading as=\"h3\">Stats:</Heading>\n                  {JSON.stringify(values.stats)}\n                </div>\n              )}\n              {values.users && (\n                <div>\n                  <Heading as=\"h3\">Users:</Heading>\n                  {JSON.stringify(values.users)}\n                </div>\n              )}\n              {values.positions && (\n                <div>\n                  <Heading as=\"h3\">Positions:</Heading>\n                  {JSON.stringify(values.positions)}\n                </div>\n              )}\n              <Box py={20}>\n                <strong>\n                  {\" \"}\n                  In case you need Trevor to create, share this snippet:\n                </strong>\n              </Box>\n              {!gqlArgs ? (\n                <Button onClick={() => generateSnippet}>\n                  Generate Snippet\n                </Button>\n              ) : (\n                <code>\n                  {JSON.stringify(gqlArgs).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\")}\n                </code>\n              )}\n            </Box>\n            <CardFooter>\n              <Button\n                sx={{ marginRight: 5 }}\n                onClick={async () => {\n                  try {\n                    const res = await onboard({\n                      variables: {\n                        ...gqlArgs\n                      }\n                    });\n\n                    if (\n                      res.data &&\n                      res.data.onboardAgency &&\n                      res.data.onboardAgency.id\n                    ) {\n                      add({ content: \"Agency created!\", variant: \"success\" });\n                      hideModal();\n                    }\n                  } catch (e) {\n                    add({ content: e.message, variant: \"error\" });\n                  }\n                }}\n              >\n                {loading ? \"Creating...\" : \"Create Agency\"}\n              </Button>\n              <Button onClick={() => hideModal()} variant=\"secondary\">\n                Not yet\n              </Button>\n            </CardFooter>\n          </>\n        ) : (\n          <Box p={45}>\n            No values...\n            <CardFooter>\n              <Button onClick={() => hideModal()}>Go Back</Button>\n            </CardFooter>\n          </Box>\n        )}\n      </ReactModal>\n    ),\n    [values, gqlArgs, loading, add]\n  );\n\n  function handleCheckBoxChange(e) {\n    setValues({ ...values, [e.target.name]: !values[e.target.name] });\n  }\n\n  function handleChange(e, field) {\n    let cleanValue;\n    if (e.target.name === \"stats\") {\n      cleanValue = e.target.value.split(\",\").map(i => toTitleCase(i.trim()));\n    }\n    if (e.target.name === \"positions\") {\n      const removeFront = e.target.value.split(\",\");\n\n      cleanValue = removeFront\n        ? removeFront.map(i => ({\n            name: i && toTitleCase(i.trim()),\n            dispatchable: false\n          }))\n        : \"\";\n    }\n\n    if (e.target.name === \"users\") {\n      let removeFront = e.target.value.split(\":\");\n\n      if (!removeFront[1]) {\n        removeFront = e.target.value.split(\",\");\n      }\n\n      cleanValue = removeFront\n        ? removeFront.map(i => ({\n            name: i && toTitleCase(i.trim())\n          }))\n        : \"\";\n    }\n\n    setValues({\n      ...values,\n      [e.target.name]: cleanValue || toTitleCase(e.target.value)\n    });\n  }\n\n  function generateSnippet() {\n    setGQLArgs(formatGqlArgs(values));\n  }\n\n  function handleSubmit() {\n    generateSnippet();\n    showModal();\n  }\n\n  return (\n    <Layout withNav={true} bannerChildren=\"Watchtower Admin\">\n      <Box\n        sx={{ maxWidth: \"1200px\", margin: \"auto\" }}\n        py={45}\n        as=\"form\"\n        onSubmit={e => e.preventDefault()}\n      >\n        <Heading as=\"h1\">Create an agency</Heading>\n        <Text>Input information to create an agency</Text>\n        <Box py={25}>\n          {\" \"}\n          <Label>Agency Name</Label>\n          <Input id=\"agencyName\" name=\"agencyName\" onChange={handleChange} />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Surfline Spot Id</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              You can find this at the end of a surfline spot url. IT SHOULD\n              START WITH A 5 and be around 20+ characters. Example:\n            </strong>\n            <br />\n            https://www.surfline.com/surf-report/newport-beach-/5842041f4e65fad6a770882c\n          </Box>\n          <Input\n            id=\"surflineSpotId\"\n            name=\"surflineSpotId\"\n            onChange={handleChange}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Stats</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              {\" \"}\n              Should follow this notation with each type being separated by a\n              comma:\n            </strong>{\" \"}\n            <br />\n            Rescue, Rescue / Surf / Swimmer, Boat, Boat / Tow\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"stats\"\n            rows=\"15\"\n            style={{\n              width: \"100%\"\n            }}\n            onChange={e => handleChange(e)}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Users</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              {\" \"}\n              Should follow this notation with each type being separated by a\n              comma or a colon (:). IF THE NAMES HAVE A COMMA, MAKE SURE YOU USE\n              : TO SEPARATE. SEE EXAMPLE BELOW:\n            </strong>{\" \"}\n            <br />\n            Trevor Heath, David Rodriguez <br />\n            <strong>or</strong>\n            <br /> Heath, Trevor: Rodriguez, David\n            <br />\n            You can use this{\" \"}\n            <a href=\"https://convert.town/column-to-comma-separated-list\">\n              website\n            </a>{\" \"}\n            to convert a column to the correct format. The delimiter option\n            allows you to choose a comma or colon.\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"users\"\n            rows=\"15\"\n            style={{\n              width: \"100%\"\n            }}\n            onChange={e => handleChange(e)}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Positions</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              Should follow this notation with each type being separated by a\n              comma:\n            </strong>{\" \"}\n            <br />\n            Tower 10, 5210, 5220\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"positions\"\n            rows=\"15\"\n            style={{ width: \"100%\" }}\n            onChange={handleChange}\n          />\n          {values.positions && (\n            <div>\n              <h4>Dispatchable?</h4>\n              <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n                <strong>\n                  Check the positions that are defaulted as dispatchable, this\n                  can be editted by the user later on.\n                </strong>\n              </Box>\n              {values.positions.map((p, k) => {\n                return (\n                  <Box>\n                    <Label mb={3}>\n                      <Checkbox\n                        defaultChecked={false}\n                        name={p.name}\n                        onClick={handleCheckBoxChange}\n                      />\n                      {p.name}\n                    </Label>\n                  </Box>\n                );\n              })}\n            </div>\n          )}\n        </Box>\n\n        <Box py={45} sx={{ width: \"100%\" }}>\n          <Button sx={{ width: \"100%\" }} onClick={handleSubmit}>\n            Create agency data\n          </Button>\n        </Box>\n\n        {/* {stats.split(\",\").map(i => (\n        <div>{i}</div>\n      ))} */}\n      </Box>\n    </Layout>\n  );\n};\n\nconst formatGqlArgs = data => {\n  let args = {\n    agencyName: data.agencyName,\n    activities: data.stats,\n    surflineSpotId: data.surflineSpotId\n  };\n  if (data.users) {\n    args.users = {\n      create: data.users.map(u => ({\n        name: u.name\n      }))\n    };\n  }\n\n  if (data.positions) {\n    args.positions = {\n      create: data.positions.map(u => ({\n        name: u.name,\n        dispatchable: data[u.name] ? true : false\n      }))\n    };\n  }\n\n  return {\n    data: {\n      ...args\n    }\n  };\n};\n\nexport default Admin;\n","import theme from \"@theme-ui/preset-bootstrap\";\n\nimport nightOwl from \"@theme-ui/prism/presets/night-owl.json\";\n\nexport default {\n  breakpoints: [\"576px\", \"768px\", \"992px\", \"1200px\"],\n  colors: {\n    white: \"#fff\",\n    black: \"#000\",\n    gray: [\n      \"#fff\",\n      \"#f8f9fa\",\n      \"#e9ecef\",\n      \"#dee2e6\",\n      \"#ced4da\",\n      \"#adb5bd\",\n      \"#6c757d\",\n      \"#495057\",\n      \"#343a40\",\n      \"#212529\"\n    ],\n    blue: \"#007bff\",\n    indigo: \"#6610f2\",\n    purple: \"#6f42c1\",\n    pink: \"#e83e8c\",\n    red: \"#dc3545\",\n    orange: \"#fd7e14\",\n    yellow: \"#ffc107\",\n    green: \"#28a745\",\n    teal: \"#20c997\",\n    cyan: \"#17a2b8\",\n    grayDark: \"#343a40\",\n    text: \"#212529\",\n    background: \"#fff\",\n    primary: \"#007bff\",\n    secondary: \"#6c757d\",\n    muted: \"#dee2e6\",\n    success: \"#28a745\",\n    info: \"#17a2b8\",\n    warning: \"#ffc107\",\n    danger: \"#dc3545\",\n    light: \"#f8f9fa\",\n    dark: \"#343a40\",\n    textMuted: \"#6c757d\"\n  },\n  space: [\"0rem\", \"0.25rem\", \"0.5rem\", \"1rem\", \"1.5rem\", \"3rem\"],\n  fonts: {\n    body:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n    heading: \"inherit\",\n    monospace:\n      'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n    sans:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"'\n  },\n  fontSizes: [\n    \"0.75rem\",\n    \"0.875rem\",\n    \"1rem\",\n    \"1.25rem\",\n    \"1.5rem\",\n    \"1.75rem\",\n    \"2rem\",\n    \"2.5rem\",\n    \"3.5rem\",\n    \"4.5rem\",\n    \"5.5rem\",\n    \"6rem\"\n  ],\n  fontWeights: {\n    body: 400,\n    heading: 500,\n    bold: 700,\n    light: 300,\n    normal: 400,\n    display: 300\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.2\n  },\n  sizes: {\n    sm: 540,\n    md: 720,\n    lg: 960,\n    xl: 1140\n  },\n  shadows: {\n    default: \"0 .5rem 1rem rgba(0, 0, 0, .15)\",\n    sm: \"0 .125rem .25rem rgba(0, 0, 0, .075)\",\n    lg: \"0 1rem 3rem rgba(0, 0, 0, .175)\"\n  },\n  radii: {\n    default: \"0.25rem\",\n    sm: \"0.2rem\",\n    lg: \"0.3rem\",\n    pill: \"50rem\"\n  },\n  typeStyles: {\n    heading: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2\n    },\n    display: {\n      fontWeight: \"display\",\n      lineHeight: \"heading\"\n    },\n    forms: {\n      label: {\n        fontSize: 1,\n        fontWeight: \"bold\"\n      }\n    },\n    alerts: {\n      primary: {\n        color: \"white\",\n        bg: \"primary\"\n      },\n      error: {\n        bg: \"danger\"\n      },\n      success: {\n        bg: \"success\"\n      }\n    },\n    buttons: {\n      primary: {\n        color: \"white\",\n        bg: \"primary\"\n      },\n      link: {\n        bg: \"transparent\"\n      },\n      success: {\n        bg: \"success\"\n      }\n    }\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      lineHeight: \"body\",\n      fontWeight: \"body\"\n    },\n    a: {\n      color: \"primary\",\n      textDecoration: \"none\",\n      \":hover\": {\n        textDecoration: \"underline\"\n      }\n    },\n    p: {\n      mb: 3,\n      lineHeight: \"body\"\n    },\n    h1: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 7\n    },\n    h2: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 6\n    },\n    h3: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 5\n    },\n    h4: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 4\n    },\n    h5: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 3\n    },\n    h6: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 2\n    },\n    blockquote: {\n      fontSize: 3,\n      mb: 3\n    },\n    table: {\n      width: \"100%\",\n      marginBottom: 3,\n      color: \"gray.9\",\n      borderCollapse: \"collapse\"\n    },\n    th: {\n      verticalAlign: \"bottom\",\n      borderTopWidth: 2,\n      borderTopStyle: \"solid\",\n      borderTopColor: \"gray.3\",\n      borderBottomWidth: 2,\n      borderBottomStyle: \"solid\",\n      borderBottomColor: \"gray.3\",\n      padding: \".75rem\",\n      textAlign: \"inherit\"\n    },\n    td: {\n      borderBottomWidth: 2,\n      borderBottomStyle: \"solid\",\n      borderBottomColor: \"gray.3\",\n      verticalAlign: \"top\",\n      padding: \".75rem\"\n    },\n    inlineCode: {\n      color: \"pink\"\n    },\n    img: {\n      maxWidth: \"100%\",\n      height: \"auto\"\n    }\n  }\n\n  // styles: {\n  //   ...theme.styles,\n  //   padding: \"1rem\",\n  //   table: {\n  //     width: \"100%\",\n  //     my: 4,\n  //     // borderColor: colors.gray,\n  //     borderCollapse: \"separate\",\n  //     borderSpacing: 0\n  //   },\n\n  //   code: {\n  //     ...nightOwl\n  //   }\n  // }\n};\n","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport { isLoggedIn, isAdmin } from \"../services/auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) =>\n  isLoggedIn() && isAdmin() ? (\n    <Component {...rest} />\n  ) : (\n    <Redirect from=\"\" to=\"admin/login\" noThrow />\n  );\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Component {...rest} />\n);\n\nexport { ProtectedRoute, PublicRoute };\n","import React, { useEffect } from \"react\";\nimport { Button, Label, Input, Box, Heading, Flex } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\n\nimport gql from \"graphql-tag\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { setToken, isLoggedIn } from \"../../services/auth\";\nimport { navigate } from \"@reach/router\";\n\nconst LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  const [login, { data, loading, error }] = useMutation(LOGIN);\n  const { register, handleSubmit } = useForm();\n  const onLogin = values => {\n    login({\n      variables: { email: values.email, password: values.password }\n    });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn()) {\n      navigate(\"/admin\");\n    }\n    if (data && data.login.token) {\n      setToken(data.login.token);\n      navigate(\"/admin\");\n    }\n  }, [data, error]);\n\n  return (\n    <Flex\n      sx={{\n        minHeight: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Box as=\"form\" sx={{ width: \"300px\" }} onSubmit={handleSubmit(onLogin)}>\n        <Box>\n          <Heading p={3} as=\"h3\">\n            Watchower Admin\n          </Heading>\n          <Box p={3}>\n            <Label>Email Address</Label>\n            <Input type=\"email\" name=\"email\" ref={register} />\n          </Box>\n          <Box p={3}>\n            <Label>Password</Label>\n            <Input type=\"password\" name=\"password\" ref={register} />\n          </Box>\n\n          <Box p={3}>\n            <Button block type=\"submit\">\n              {loading ? \"Logging in...\" : \"Login\"}\n            </Button>\n            {error && <Box>{error.message}</Box>}\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Button, Label, Input, Box, Heading, Text, Select } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\n\nimport gql from \"graphql-tag\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useToasts } from \"../../components/Toasts\";\n\nconst GET_AGENCIES = gql`\n  query GetAgencies($where: AgencyWhereInput) {\n    agencies(where: $where) {\n      id\n      name\n    }\n  }\n`;\n\nconst INVITE_USER = gql`\n  mutation InviteUser(\n    $email: String!\n    $agencyId: ID!\n    $role: Role!\n    $name: String!\n  ) {\n    sendInviteEmail(\n      email: $email\n      agencyId: $agencyId\n      role: $role\n      name: $name\n    ) {\n      success\n    }\n  }\n`;\n\nexport default function UserManagement() {\n  const [invite, { loading }] = useMutation(INVITE_USER);\n  const { data: agencies, loading: loadingAgencies } = useQuery(GET_AGENCIES);\n  const { register, handleSubmit } = useForm();\n  const { add } = useToasts();\n\n  const onInvite = async values => {\n    try {\n      const res = await invite({\n        variables: {\n          email: values.email,\n          role: values.role || \"USER\",\n          name: values.name,\n          agencyId: values.agencyId\n        }\n      });\n\n      if (\n        res.data &&\n        res.data.sendInviteEmail &&\n        res.data.sendInviteEmail.success\n      ) {\n        add({ content: \"User Invited!\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  return (\n    <Layout withNav={true} bannerChildren=\"User Management\">\n      <Box\n        sx={{ maxWidth: \"1200px\", margin: \"auto\" }}\n        py={45}\n        as=\"form\"\n        onSubmit={handleSubmit(onInvite)}\n      >\n        <Heading as=\"h1\">Invite Users</Heading>\n        <Text>Invite users to agencies.</Text>\n\n        <Box>\n          <Box py={25}>\n            <Label>Agencies</Label>\n\n            <Select type=\"select\" name=\"agencyId\" ref={register}>\n              {loadingAgencies ? (\n                <option>loading...</option>\n              ) : agencies ? (\n                agencies.agencies.map(a => (\n                  <option value={a.id}>{a.name}</option>\n                ))\n              ) : (\n                <option>No agencies</option>\n              )}\n            </Select>\n          </Box>\n          <Box py={25}>\n            <Label>Email Address</Label>\n            <Input\n              type=\"select\"\n              name=\"email\"\n              ref={register({ required: true })}\n            />\n          </Box>\n          <Box py={25}>\n            <Label>Name</Label>\n            <Input name=\"name\" ref={register({ required: true })} />\n          </Box>\n          <Box py={25}>\n            <Label>Role</Label>\n\n            <Select type=\"select\" name=\"role\" ref={register}>\n              <option value={\"USER\"}>User</option>\n              <option value={\"ADMIN\"}>Admin</option>\n            </Select>\n          </Box>\n\n          <Box py={25}>\n            <Button block type=\"submit\">\n              {loading ? \"Inviting in...\" : \"Invite\"}\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Box, Heading, Spinner, Flex, Select } from \"theme-ui\";\n\nimport gql from \"graphql-tag\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\n\nexport const sevenDaysAgo = moment().subtract(7, \"days\");\nexport const thirtyDaysAgo = moment().subtract(30, \"days\");\n\nconst dateRangeOptions = [\n  {\n    value: {\n      startDate: sevenDaysAgo,\n      endDate: moment()\n    },\n    label: \"Last 7 days\"\n  },\n  {\n    value: {\n      startDate: moment().startOf(\"day\"),\n      endDate: moment()\n    },\n    label: \"Today\"\n  },\n  {\n    value: {\n      startDate: thirtyDaysAgo,\n      endDate: moment().endOf(\"day\")\n    },\n    label: \"Last 30 days\"\n  }\n];\n\nconst GET_AGENCIES = gql`\n  query GetAgencies(\n    $where: AgencyWhereInput\n    $submissionWhereInput: SubmissionWhereInput\n  ) {\n    agencies(where: $where) {\n      id\n      name\n      submissionCount(where: $submissionWhereInput)\n    }\n  }\n`;\n\nexport default function AgencyActivity() {\n  const [dateRange, setDateRange] = useState(0);\n\n  const { data, loading: loadingAgencies } = useQuery(GET_AGENCIES, {\n    variables: {\n      submissionWhereInput: {\n        createdAt: {\n          gt: dateRangeOptions[dateRange].value.startDate.toISOString(),\n          lt: dateRangeOptions[dateRange].value.endDate.toISOString()\n        }\n      }\n    }\n  });\n\n  return (\n    <Layout withNav={true} bannerChildren=\"User Management\">\n      <Box sx={{ maxWidth: \"1200px\", margin: \"auto\" }} py={45}>\n        <Heading as=\"h1\">Agency Activity</Heading>\n        {loadingAgencies ? (\n          <Flex\n            sx={{\n              height: \"500px\",\n              width: \"100%\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <Spinner />\n          </Flex>\n        ) : (\n          <Box>\n            <Box py={45}>\n              <Select\n                id=\"dateRange\"\n                value={dateRange}\n                onChange={e => {\n                  setDateRange(e.target.value);\n                }}\n              >\n                {dateRangeOptions.map((i, k) => (\n                  <option name={i.label} value={k}>\n                    {i.label}\n                  </option>\n                ))}\n              </Select>\n            </Box>\n            <Box as=\"table\">\n              <Box as=\"thead\">\n                <Box as=\"tr\">\n                  <Box as=\"th\">Agency Name</Box>\n                  <Box as=\"th\"> Incident Count</Box>\n                </Box>\n              </Box>\n              <tbody>\n                {data &&\n                  data.agencies.map(a => {\n                    return (\n                      <Box as=\"tr\">\n                        <Box as=\"td\" p={10}>\n                          {a.name}\n                        </Box>\n                        <Box as=\"td\" p={10}>\n                          {a.submissionCount > 29 ? \"30+\" : a.submissionCount}\n                        </Box>\n                      </Box>\n                    );\n                  })}\n              </tbody>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Button, Label, Input, Box, Heading, Select, Spinner } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\nimport { useTable } from \"react-table\";\nimport styled from \"@emotion/styled\";\nimport gql from \"graphql-tag\";\n\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport { useToasts } from \"../../components/Toasts\";\n\nconst GET_AGENCY_DETAILS = gql`\n  query GetAgencyDetails($id: String!) {\n    agencies(where: { id: { equals: $id } }) {\n      id\n      name\n      users {\n        id\n        name\n        email\n        role\n        isSignedUp\n      }\n      settings {\n        id\n        surflineSpotId\n        dispatching\n        incidentReporting\n        epcr\n      }\n    }\n  }\n`;\n\nconst GET_AGENCIES = gql`\n  query GetAgencies($where: AgencyWhereInput) {\n    agencies(where: $where) {\n      id\n      name\n    }\n  }\n`;\n\nconst UPDATE_AGENCY = gql`\n  mutation UpdateAgency(\n    $where: AgencyWhereUniqueInput!\n    $data: AgencyUpdateInput!\n  ) {\n    updateOneAgency(where: $where, data: $data) {\n      id\n    }\n  }\n`;\n\nconst RE_SEND_INVITE = gql`\n  mutation ResendInvite($email: String!) {\n    resendInviteEmail(email: $email) {\n      success\n    }\n  }\n`;\n\nexport default function UserManagement() {\n  const [selectedAgencyId, selectAgency] = useState(null);\n  const [updateOneAgency, { loading }] = useMutation(UPDATE_AGENCY);\n  const [resendInvite, { loading: resendingInvite }] = useMutation(\n    RE_SEND_INVITE\n  );\n  const { data: agencies, loading: loadingAgencies } = useQuery(GET_AGENCIES);\n  const [loadAgency, { loading: loadingAgency, data }] = useLazyQuery(\n    GET_AGENCY_DETAILS\n  );\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const defaultFormValues = {\n    ...(data && data.agencies[0]),\n    ...(data && data.agencies[0].settings)\n  };\n  const { add } = useToasts();\n\n  useEffect(() => {\n    if (selectedAgencyId) {\n      loadAgency({\n        variables: {\n          id: selectedAgencyId\n        }\n      });\n    }\n  }, [selectedAgencyId]);\n\n  const onUpdate = async values => {\n    try {\n      if (!selectedAgencyId) {\n        add({ content: \"Please select an agency to update\", variant: \"error\" });\n        return;\n      }\n      let settings = {};\n      if (values.surflineSpotId) {\n        settings = {\n          settings: {\n            update: {\n              surflineSpotId: values.surflineSpotId\n            }\n          }\n        };\n      }\n      const res = await updateOneAgency({\n        variables: {\n          where: {\n            id: selectedAgencyId\n          },\n          data: {\n            ...settings\n          }\n        }\n      });\n\n      if (res.data && res.data.updateOneAgency && res.data.updateOneAgency.id) {\n        add({ content: \"Agency Updated\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  const onResendInvite = async args => {\n    try {\n      if (!selectedAgencyId) {\n        add({ content: \"Please select an agency to update\", variant: \"error\" });\n        return;\n      }\n\n      const res = await resendInvite(args);\n\n      if (\n        res.data &&\n        res.data.resendInviteEmail &&\n        res.data.resendInviteEmail.success\n      ) {\n        add({ content: \"Sent!\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  return (\n    <Layout\n      withNav={true}\n      bannerChildren=\"User Management\"\n      loading={resendingInvite}\n    >\n      <Box sx={{ maxWidth: \"1200px\", margin: \"auto\" }} py={45}>\n        <Heading as=\"h1\">Update Agency</Heading>\n        <Box py={25}>\n          <Select\n            onChange={e => selectAgency(e.target.value)}\n            type=\"select\"\n            name=\"agencyId\"\n          >\n            {loadingAgencies ? (\n              <option>loading...</option>\n            ) : agencies ? (\n              [\n                <option value=\"\">Select an agency</option>,\n                ...agencies.agencies.map(a => (\n                  <option value={a.id}>{a.name}</option>\n                ))\n              ]\n            ) : (\n              <option>No agencies</option>\n            )}\n          </Select>\n        </Box>\n\n        <Box>\n          {loadingAgency ? (\n            <Spinner />\n          ) : (\n            <Box as=\"form\" onSubmit={handleSubmit(onUpdate)}>\n              <Box py={25}>\n                <Label>Name</Label>\n                <Input\n                  type=\"select\"\n                  name=\"name\"\n                  defaultValue={defaultFormValues.name}\n                  ref={ref =>\n                    register({\n                      required: false,\n                      minLength: {\n                        value: 3,\n                        message: \"Make sure the name is long enough.\"\n                      }\n                    })\n                  }\n                />\n                <FormError error={errors.name} />\n              </Box>\n              <Box py={25}>\n                <Label>Surfline Id</Label>\n                <Input\n                  type=\"select\"\n                  name=\"surflineSpotId\"\n                  defaultValue={defaultFormValues.surflineSpotId}\n                  ref={ref =>\n                    register({\n                      required: false,\n                      minLength: {\n                        value: 15,\n                        message:\n                          \"Spot ids should looks something like this: 5842041f4e65fad6a77089fa\"\n                      }\n                    })\n                  }\n                />\n                <FormError error={errors.surflineSpotId} />\n              </Box>\n              <Box py={25}>\n                <Button block type=\"submit\">\n                  {loading ? \"Updating...\" : \"Update\"}\n                </Button>\n              </Box>\n            </Box>\n          )}\n          {data && data.agencies[0].users ? (\n            <Box py={25}>\n              <h2>Users </h2>\n              <UserTable\n                data={data.agencies[0].users}\n                resendInvite={onResendInvite}\n              />\n              <FormError error={errors.users} />\n            </Box>\n          ) : (\n            <Fragment />\n          )}\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n\nconst FormError = ({ error }) => {\n  if (!error) return <Fragment />;\n  return <Box color=\"red\">{error.message}</Box>;\n};\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                console.log(cell.value);\n                return <td {...cell.getCellProps()}>{cell.value}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst UserTable = ({ data, resendInvite }) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\"\n      },\n\n      {\n        Header: \"Email\",\n        accessor: \"email\"\n      },\n      {\n        Header: \"Role\",\n        accessor: \"role\"\n      },\n      {\n        Header: \"Registered\",\n        accessor: value => {\n          return value.isSignedUp === true ? \"Yes\" : \"No\";\n        }\n      },\n      {\n        Header: \"Resend Invite \",\n        accessor: value => {\n          if (value.isSignedUp === false && value.email) {\n            return (\n              <Button\n                onClick={() =>\n                  resendInvite({\n                    variables: {\n                      email: value.email\n                    }\n                  })\n                }\n                sx={{ variant: \"link\" }}\n              >\n                Resend Invite\n              </Button>\n            );\n          }\n          return <Fragment />;\n        }\n      }\n    ],\n    []\n  );\n\n  const tableData = React.useMemo(() => data, []);\n  return (\n    <Styled>\n      <Table columns={columns} data={tableData} />\n    </Styled>\n  );\n};\n\nconst Styled = styled.div`\n  padding: 1rem;\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    border-radius: 4px;\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th {\n      background-color: ${props => {\n        console.log(props.theme.colors);\n        return props.theme.colors[\"grayDark\"];\n      }};\n      text-align: left;\n      padding: 1rem;\n      color: white;\n    }\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"theme-ui\";\n\nimport \"./styles.css\";\n\nimport Onboarding from \"./routes/Onboarding\";\nimport Admin from \"./routes/admin\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport { Router } from \"@reach/router\";\nimport theme from \"./theme\";\nimport client from \"./services/Apollo\";\nimport { PublicRoute, ProtectedRoute } from \"./components/routes\";\nimport Login from \"./routes/admin/Login\";\nimport UserManagement from \"./routes/admin/UserManagement\";\nimport AgencyActivity from \"./routes/admin/Activity\";\nimport { ToastProvider } from \"./components/Toasts\";\nimport Prism from \"@theme-ui/prism\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport EditAgency from \"./routes/admin/EditAgency\";\n\nconst components = {\n  pre: ({ children }) => <>{children}</>,\n  code: Prism\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme} components={components}>\n        <ModalProvider>\n          <ToastProvider>\n            <Router>\n              <PublicRoute component={Onboarding} path=\"/\" />\n              <ProtectedRoute path=\"admin\" component={Admin} />\n              <ProtectedRoute path=\"admin/users\" component={UserManagement} />\n              <ProtectedRoute path=\"admin/edit-agency\" component={EditAgency} />\n              <ProtectedRoute\n                path=\"admin/activity\"\n                component={AgencyActivity}\n              />\n              <PublicRoute component={Login} path=\"/admin/login\" />\n            </Router>\n          </ToastProvider>\n        </ModalProvider>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}