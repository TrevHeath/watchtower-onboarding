{"version":3,"sources":["components/checkboxTree/checkboxTree.js","components/Banner.js","config.js","services/Apollo.js","services/auth.js","components/Nav.js","components/Layout.js","routes/Onboarding.js","components/Toasts.js","utils.js","routes/admin/index.js","theme.js","components/routes.js","routes/admin/Login.js","routes/admin/UserManagement.js","routes/admin/Activity.js","routes/admin/EditAgency.js","index.js"],"names":["getNodeIds","nodes","ids","forEach","_ref","value","children","concat","Object","toConsumableArray","CustomCheckboxTree","_ref2","options","handleClear","_useState","useState","_useState2","slicedToArray","setNodes","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","errors","setErrors","_useState7","_useState8","checked","setChecked","_useState9","_useState10","expanded","setExpanded","React","useEffect","prev","filter","i","includes","react_default","a","createElement","dist_index_esm","as","onSubmit","e","preventDefault","agency","cleanChecked","map","split","fetch","process","method","headers","Accept","body","JSON","stringify","text","then","r","ok","alert","catch","form","handleSubmit","py","htmlFor","id","name","onChange","defineProperty","target","color","length","index_browser_default","optimisticToggle","noCascade","onCheck","checkedInput","onExpand","icons","check","className","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","style","marginLeft","variant","onClick","type","Banner","sx","px","backgroundImage","backgroundSize","backgroundPosition","borderRadius","bg","position","zIndex","textAlign","fontSize","top","right","left","bottom","backgroundColor","opacity","dotenv","require","NODE_STAGE","config","staging","GRAPHQL_URL","production","REACT_APP_PRODUCTION_GRAPHQL_URL","slackUrl","flattenedConfig","_objectSpread","httpLink","createHttpLink","uri","authLink","setContext","_","token","cookie","load","Apollo_objectSpread","Authorization","client","ApolloClient","link","cache","InMemoryCache","isBrowser","window","getToken","gql","_templateObject","isLoggedIn","isAdmin","role","jwt","decode","getUserRole","logout","callback","remove","path","isActive","isCurrent","textDecoration","Nav","p","fontWeight","justifyContent","flex","es","getProps","to","href","event","navigate","Layout","withNav","bannerChildren","loading","width","mapToOptionTree","k","label","category","subCategories","sub","kSub","subSubCategories","subSub","kSubSub","Onboarding","values","setValues","categorySelect","inputValues","setInputValues","onInputChange","Onboarding_objectSpread","onAdd","normalizedValue","toLowerCase","word","toUpperCase","substr","join","trim","prevVals","newVals","c","push","console","error","mappedOptions","m","flexWrap","maxWidth","margin","borderBottom","pb","checkboxTree_CustomCheckboxTree","flexDirection","defaultValue","v","key","Ctx","createContext","ToastContainer","props","assign","Toast","onDismiss","rest","objectWithoutProperties","padding","toastCount","ToastProvider","_React$useState","_React$useState2","toasts","setToasts","newToasts","t","Provider","add","_ref3","content","toast","Toasts_objectSpread","Toasts_ToastContainer","_ref4","Toasts_Toast","useToasts","useContext","toTitleCase","str","replace","txt","charAt","ONBOARD_AGENCY","admin_templateObject","CardFooter","height","formatGqlArgs","data","args","agencyName","activities","stats","surflineSpotId","users","create","u","positions","dispatchable","admin_objectSpread","Admin","_useMutation","useMutation","_useMutation2","onboard","gqlArgs","setGQLArgs","_useModal","useModal","lib_default","isOpen","keys","Fragment","generateSnippet","admin_CardFooter","marginRight","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","next","variables","sent","onboardAgency","hideModal","t0","message","stop","_useModal2","showModal","handleCheckBoxChange","handleChange","field","cleanValue","removeFront","rows","mb","defaultChecked","theme","breakpoints","colors","white","black","gray","blue","indigo","purple","pink","red","orange","yellow","green","teal","cyan","grayDark","background","primary","secondary","muted","success","info","warning","danger","light","dark","textMuted","space","fonts","heading","monospace","sans","fontSizes","fontWeights","bold","normal","display","lineHeights","sizes","sm","md","lg","xl","shadows","default","radii","pill","typeStyles","fontFamily","lineHeight","mt","forms","alerts","buttons","styles","root",":hover","h1","h2","h3","h4","h5","h6","blockquote","table","marginBottom","borderCollapse","th","verticalAlign","borderTopWidth","borderTopStyle","borderTopColor","borderBottomWidth","borderBottomStyle","borderBottomColor","td","inlineCode","img","ProtectedRoute","Component","component","from","noThrow","PublicRoute","LOGIN","Login_templateObject","Login","login","_useMutation2$","_useForm","useForm","register","save","minHeight","alignItems","email","password","ref","block","GET_AGENCIES","UserManagement_templateObject","INVITE_USER","_templateObject2","UserManagement","invite","_useQuery","useQuery","agencies","loadingAgencies","onInvite","agencyId","sendInviteEmail","_x","apply","this","arguments","required","sevenDaysAgo","moment","subtract","thirtyDaysAgo","dateRangeOptions","startDate","endDate","startOf","endOf","Activity_templateObject","AgencyActivity","dateRange","setDateRange","submissionWhereInput","createdAt","gt","toISOString","lt","submissionCount","GET_AGENCY_DETAILS","EditAgency_templateObject","EditAgency_templateObject2","UPDATE_AGENCY","_templateObject3","RE_SEND_INVITE","_templateObject4","selectedAgencyId","selectAgency","updateOneAgency","_useMutation3","_useMutation4","resendInvite","resendingInvite","_useLazyQuery","useLazyQuery","_useLazyQuery2","loadAgency","_useLazyQuery2$","loadingAgency","defaultFormValues","EditAgency_objectSpread","settings","onUpdate","abrupt","update","log","where","onResendInvite","_callee2","_context2","resendInviteEmail","_x2","minLength","EditAgency_FormError","EditAgency_UserTable","react","FormError","Table","columns","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","UserTable","_ref5","useMemo","Header","accessor","isSignedUp","tableData","Styled","styled","div","_templateObject5","components","pre","code","Prism","rootElement","document","getElementById","ReactDOM","react_common_esm","index_esm","index_es","routes_PublicRoute","routes_ProtectedRoute","EditAgency"],"mappings":"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","file":"static/js/main.f6ae99cd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport { Box, Button, Input, Label } from \"theme-ui\";\n\nimport \"./checkbox-styles.css\";\n\nconst slackUrl = process.env.REACT_APP_SLACK_URL;\n\nfunction getNodeIds(nodes) {\n  let ids = [];\n\n  nodes &&\n    nodes.forEach(({ value, children }) => {\n      ids = [...ids, value, ...getNodeIds(children)];\n    });\n\n  return ids;\n}\n\nexport const CustomCheckboxTree = ({ options, handleClear }) => {\n  const [nodes, setNodes] = useState(options);\n  const [inputs, setInputs] = useState({});\n  const [errors, setErrors] = useState();\n  const [checked, setChecked] = useState();\n\n  const [expanded, setExpanded] = useState();\n\n  React.useEffect(() => {\n    setNodes(options);\n    setChecked((prev) => {\n      return getNodeIds(options).filter((i) =>\n        prev ? prev.includes(i) : true\n      );\n    });\n    setExpanded(getNodeIds(options));\n  }, [options]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputs.agency) {\n      return setErrors({ agency: \"Please input an agency name\" });\n    }\n    setErrors({});\n\n    const cleanChecked = checked.map((i) => i.split(\" -\")[0]);\n\n    fetch(slackUrl, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        text: ` ${inputs.agency} has submitted their stat form:, \\`\\`\\` ${cleanChecked}\\`\\`\\` `,\n      }),\n    })\n      .then((r) => {\n        if (r.ok === true) {\n          alert(\"Stat categories sent successfully\");\n        }\n      })\n      .catch((e) => {\n        setErrors({ form: `Error submitting: ${e}` });\n      });\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={(e) => handleSubmit(e)}>\n      <Box py={3}>\n        <Label htmlFor=\"agency\">My Agency Name</Label>\n        <Input\n          id=\"agency\"\n          name=\"agency\"\n          onChange={(e) => {\n            setInputs({ [e.target.name]: e.target.value });\n          }}\n        />\n        {errors && errors.agency && <Box color=\"red\">{errors.agency}</Box>}\n      </Box>\n      <Box py={3}>\n        {nodes.length < 1 && <div>No stats to select.</div>}\n        <CheckboxTree\n          nodes={nodes}\n          checked={checked}\n          expanded={expanded}\n          optimisticToggle={false}\n          noCascade={true}\n          onCheck={(checkedInput) => {\n            return setChecked(checkedInput);\n          }}\n          onExpand={(expanded) => setExpanded(expanded)}\n          icons={{\n            check: <span className=\"rct-icon rct-icon-check\" />,\n            uncheck: <span className=\"rct-icon rct-icon-uncheck\" />,\n            halfCheck: <span className=\"rct-icon rct-icon-half-check\" />,\n            expandClose: <span className=\"rct-icon rct-icon-expand-close\" />,\n            expandOpen: <span className=\"rct-icon rct-icon-expand-open\" />,\n            expandAll: <span className=\"rct-icon rct-icon-expand-all\" />,\n            collapseAll: <span className=\"rct-icon rct-icon-collapse-all\" />,\n            parentClose: null,\n            parentOpen: null,\n            leaf: null,\n          }}\n        />\n      </Box>\n      <Button>Submit categories</Button>\n\n      <Button\n        style={{ marginLeft: 10 }}\n        variant=\"secondary\"\n        onClick={() => handleClear()}\n        type=\"button\"\n      >\n        Clear Checkboxes\n      </Button>\n\n      {errors && errors.form && <Box color=\"red\">{errors.form}</Box>}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Box, Heading } from \"theme-ui\";\n\nexport default ({ children }) => {\n  return (\n    <Box\n      sx={{\n        px: 4,\n        py: \"10rem\",\n        backgroundImage:\n          \"url(https://images.unsplash.com/photo-1444762908691-c8461d64d5f6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=3300&q=80)\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        borderRadius: 8,\n        color: \"white\",\n        bg: \"gray\",\n        position: \"relative\"\n      }}\n    >\n      <Heading\n        sx={{\n          position: \"relative\",\n          zIndex: \"2\",\n          textAlign: \"center\",\n          fontSize: [5, 6]\n        }}\n        as=\"h4\"\n      >\n        {children}\n      </Heading>\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"0px\",\n          right: \"0px\",\n          left: \"0px\",\n          bottom: \"0px\",\n          zIndex: \"1\",\n          backgroundColor: \"rgb(51, 51, 51)\",\n          opacity: \"0.8\"\n        }}\n      />\n    </Box>\n  );\n};\n","const dotenv = require(\"dotenv\");\n\n// require and configure dotenv, will load vars in .env in PROCESS.ENV\nif (process.env.NODE_STAGE !== \"production\") {\n  dotenv.config();\n}\n\nconst config = {\n  staging: { GRAPHQL_URL: process.env.REACT_APP_STAGING_GRAPHQL_URL },\n  production: {\n    GRAPHQL_URL: process.env.REACT_APP_PRODUCTION_GRAPHQL_URL\n  },\n  slackUrl: process.env.REACT_APP_SLACK_URL\n};\n\nconst flattenedConfig = {\n  ...config,\n  ...config[process.env.REACT_APP_STAGE]\n};\n\nexport default flattenedConfig;\n","import config from \"../config\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport cookie from \"react-cookies\";\n\nconst httpLink = createHttpLink({ uri: config.GRAPHQL_URL });\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from cookie if it exists\n  const token = cookie.load(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default client;\n","import React, { Fragment } from \"react\";\nimport cookie from \"react-cookies\";\nimport client from \"../services/Apollo\";\n\nimport jwt from \"jsonwebtoken\";\nimport gql from \"graphql-tag\";\n\n// helpful for debugging netlify identity\nconst logAuth = process.env.NODE_ENV === \"development\" && false; // set to true to turn on logging\nconst clog = (...args) => logAuth && console.log(...args);\n// helpful for debugging netlify identity\n\nexport const isBrowser = () => typeof window !== \"undefined\";\n\nconst GET_CURRENT_USER = gql`\n  query CurrentUser {\n    me {\n      id\n      email\n      name\n      role\n    }\n  }\n`;\n\nexport const getUser = () => {\n  return client\n    ? client\n        .query({ query: GET_CURRENT_USER })\n        .then(d => d.me)\n        .catch(() => {})\n    : null;\n};\n\nexport const getUserRole = () => {\n  if (!isLoggedIn()) return null;\n  const token = getToken();\n  return jwt.decode(token).role;\n};\n\nexport const setToken = token => cookie.save(\"token\", token, { path: \"/\" });\nexport const deleteToken = () => cookie.remove(\"token\", { path: \"/\" });\n\nexport const getToken = () => cookie.load(\"token\");\n// export const handleLogin = callback => {\n//   clog('isLoggedIn check', isLoggedIn())\n//   if (isLoggedIn()) {\n//     clog('logged in')\n//     callback(getUser())\n//   } else {\n//     clog('logging in...')\n//     netlifyIdentity.open()\n//     netlifyIdentity.on('login', user => {\n//       clog('logged in!', { user })\n//       setUser(user)\n//       callback(user)\n//     })\n//   }\n// }\n\nexport const isLoggedIn = () => {\n  if (!isBrowser()) return false;\n  // const user = getUser()\n  const user = getToken();\n  return !!user;\n};\n\nexport const isAdmin = () => {\n  if (!isBrowser()) return false;\n  const role = getUserRole();\n  if (!role) return false;\n  clog(\"isAdmin check\", { role });\n  return role === \"SUPER_ADMIN\";\n};\n\nexport const logout = callback => {\n  deleteToken();\n  callback();\n};\n\nexport const AdminOnly = ({ children }) => {\n  const isAdminRole = isAdmin();\n  if (!isAdminRole) {\n    return <Fragment />;\n  }\n  return children;\n};\n","import React from \"react\";\nimport { Flex, NavLink, Box } from \"theme-ui\";\nimport { Link, navigate } from \"@reach/router\";\nimport { logout } from \"../services/auth\";\n\nconst isActive = ({ isCurrent }) => {\n  return isCurrent\n    ? { style: { color: \"inherit\", textDecoration: \"underline\" } }\n    : null;\n};\n\nexport default () => {\n  return (\n    <Flex\n      as=\"nav\"\n      p={25}\n      sx={{\n        bg: \"black\",\n        color: \"white\",\n        fontWeight: \"bold\",\n        justifyContent: \"space-between\"\n      }}\n    >\n      <Flex sx={{ flex: 1 }}>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin\"\n          >\n            Create Agency\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/edit-agency\"\n          >\n            Edit Agency\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/users\"\n          >\n            Invite Users\n          </Link>\n        </Box>\n        <Box color=\"white\" p={2}>\n          <Link\n            getProps={isActive}\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n            to=\"/admin/activity\"\n          >\n            Activity\n          </Link>\n        </Box>\n      </Flex>\n      <Box p={2}>\n        <NavLink\n          href=\"/agency/stats\"\n          onClick={event => {\n            event.preventDefault();\n            logout(() => navigate(`/admin/login`));\n          }}\n        >\n          Logout\n        </NavLink>\n      </Box>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Box, Spinner } from \"theme-ui\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nexport default function Layout({ withNav, bannerChildren, children, loading }) {\n  return (\n    <Box sx={{ position: \"relative\" }}>\n      {loading && (\n        <Box sx={{ position: \"fixed\", top: 0, right: 0 }}>\n          <Spinner />\n        </Box>\n      )}\n      <Banner>{bannerChildren}</Banner>\n      {withNav && (\n        <Box sx={{ width: \"100%\" }}>\n          <Nav />\n        </Box>\n      )}\n      <Box p={45} sx={{ position: \"relative\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Button,\n  Box,\n  Flex,\n  Heading,\n  Text,\n  Input,\n  Label,\n  Select,\n} from \"theme-ui\";\n\nimport { CustomCheckboxTree as CheckboxTree } from \"../components/checkboxTree/checkboxTree\";\nimport Layout from \"../components/Layout\";\n\nconst mapToOptionTree = (options) => {\n  return options.map((i, k) => ({\n    label: i.category,\n    value: `${i.category} - ${k}`,\n    children:\n      i.subCategories &&\n      i.subCategories.map((sub, kSub) => {\n        return {\n          label: sub,\n          value: `${i.category} / ${sub} - ${kSub}`,\n          children:\n            i.subSubCategories &&\n            i.subSubCategories.map((subSub, kSubSub) => {\n              return {\n                label: subSub,\n                value: `${i.category} / ${sub} / ${subSub} - ${kSub + kSubSub}`,\n              };\n            }),\n        };\n      }),\n  }));\n};\n\nfunction normalizeString(str) {\n  return str\n    .toLowerCase()\n    .split(\" \")\n    .map(function (word) {\n      return word[0].toUpperCase() + word.substr(1);\n    })\n    .join(\" \")\n    .trim();\n}\n\nconst options = [\n  {\n    category: \"Rescues\",\n    subCategories: [\n      \"Rip Current\",\n      \"Surf\",\n      \"Pier\",\n      \"Rocks & Jetty\",\n      \"Inshore Holes\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Swimmer\", \"Apparatus\", \"Other\"],\n  },\n  {\n    category: \"Preventative Action\",\n    subCategories: [\n      \"Rip Current\",\n      \"Surf\",\n      \"Pier\",\n      \"Rocks & Jetty\",\n      \"Inshore Holes\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Swimmer\", \"Apparatus\", \"Other\"],\n  },\n  {\n    category: \"Minor Medical Aid\",\n    subCategories: [\n      \"Laceration\",\n      \"Abrasion\",\n      \"Fracture\",\n      \"Sprain or Strain\",\n      \"Head Neck Back Injury\",\n      \"Stingray\",\n      \"JellyFish\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Skating\", \"Surfing\", \"Biking\", \"Other\"],\n  },\n  {\n    category: \"Major Medical Aid\",\n    subCategories: [\n      \"Laceration\",\n      \"Abrasion\",\n      \"Fracture\",\n      \"Sprain or Strain\",\n      \"Head Neck Back Injury\",\n      \"Stingray\",\n      \"JellyFish\",\n      \"Other\",\n    ],\n    subSubCategories: [\"Skating\", \"Surfing\", \"Biking\", \"Other\"],\n  },\n  {\n    category: \"Enforcement\",\n    subCategories: [\"Warning\", \"Citation\", \"PD Assist\", \"Arrest\"],\n    subSubCategories: [\n      \"BBQ\",\n      \"Alcohol\",\n      \"Fighting\",\n      \"Smoking\",\n      \"Unsafe Beach Activity\",\n      \"Other\",\n    ],\n  },\n  {\n    category: \"Missing Person\",\n    subCategories: [\"Child\", \"Adult\"],\n    subSubCategories: [\"Lost\", \"Found\"],\n  },\n  {\n    category: \"Contact\",\n    subCategories: [\n      \"Public Assist\",\n      \"Public Education\",\n      \"Providing Information\",\n    ],\n  },\n  {\n    category: \"Wildlife\",\n    subCategories: [\"Bird\", \"Mammal\", \"Shark\"],\n    subSubCategories: [\"Live\", \"Dead\", \"Injured\"],\n  },\n  {\n    category: \"Boat\",\n    subCategories: [\"Warning\", \"Tow\", \"Assist\", \"Rescue\"],\n  },\n  {\n    category: \"Attendance\",\n    subCategories: [\"Beach\", \"Surfers\", \"Bodyboarders\", \"Lagoon\"],\n  },\n];\n\nfunction Onboarding() {\n  const [values, setValues] = useState(options);\n  const [inputValues, setInputValues] = useState({ categorySelect: \"All\" });\n\n  const onInputChange = (e) => {\n    setInputValues({ ...inputValues, [e.target.name]: e.target.value });\n  };\n\n  const onClear = () => {\n    setValues([]);\n  };\n\n  const onAdd = (value, name) => {\n    try {\n      const normalizedValue = normalizeString(value);\n      setValues((prevVals) => {\n        let newVals;\n        if (name === \"category\") {\n          newVals = [\n            ...prevVals,\n            {\n              [name]: normalizedValue,\n            },\n          ];\n        } else {\n          prevVals.forEach((c, i) => {\n            if (inputValues.categorySelect === \"All\") {\n              if (!prevVals[i][name]) {\n                prevVals[i][name] = [normalizedValue];\n              } else {\n                prevVals[i][name].push(normalizedValue);\n              }\n            } else {\n              if (inputValues.categorySelect === c.category) {\n                if (!prevVals[i][name]) {\n                  prevVals[i][name] = [normalizedValue];\n                } else {\n                  prevVals[i][name].push(normalizedValue);\n                }\n              }\n            }\n          });\n\n          newVals = prevVals;\n        }\n\n        return newVals;\n      });\n      setInputValues({\n        ...inputValues,\n        [name]: \"\",\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const mappedOptions = mapToOptionTree(values);\n\n  return (\n    <Layout withNav={false} bannerChildren=\"Watchtower Onboarding\">\n      <Box\n        m={2}\n        p={5}\n        sx={{\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          bg: \"blue\",\n          color: \"white\",\n        }}\n      >\n        Please fill out the below form to get your Watchtower configured to your\n        beach. If you have questions, please reach out to your Watchtower rep.\n      </Box>\n      <Flex\n        py={4}\n        sx={{ flexWrap: \"wrap\", maxWidth: \"1200px\", margin: \"auto\" }}\n      >\n        <Box\n          sx={{ width: [\"100%\", \"50%\"], borderBottom: \"1px solid lightgray\" }}\n          p={3}\n        >\n          <Heading pb={1}>Select Your Stat Categories</Heading>\n          <Text sx={{ fontSize: 13 }} pb={3}>\n            Check the categories you would like to capture\n          </Text>\n          <CheckboxTree options={mappedOptions} handleClear={onClear} />\n        </Box>\n        <Flex p={3} sx={{ width: [\"100%\", \"50%\"], flexDirection: \"column\" }}>\n          <Heading pb={1}>Custom Categories</Heading>\n          <Text fontSize={13} pb={3}>\n            Custom categories will show in your checkbox tree\n          </Text>\n          <Flex py={3} sx={{ flexDirection: \"column\" }}>\n            <Box pb={2}>\n              <Label>Add Custom Category</Label>\n              <Input\n                value={inputValues.category || \"\"}\n                name=\"category\"\n                onChange={onInputChange}\n              />\n              <Box py={2}>\n                <Button onClick={() => onAdd(inputValues.category, \"category\")}>\n                  Add\n                </Button>\n              </Box>\n            </Box>\n          </Flex>\n          <Flex py={3} sx={{ flexDirection: \"column\" }}>\n            <Heading as=\"h4\" pb={1}>\n              Custom SubCategories\n            </Heading>\n            <Text fontSize={13} pb={3}>\n              Select the category you would like your sub and sub sub categories\n              to be added to.\n            </Text>\n            <Box py={2}>\n              <Label>Add to:</Label>\n              <Select\n                value={(inputValues && inputValues.categorySelect) || \"All\"}\n                name=\"categorySelect\"\n                onChange={onInputChange}\n                defaultValue=\"All\"\n              >\n                <option value={\"All\"}>{\"All\"}</option>\n                {values.map((v, i) => {\n                  return (\n                    <option key={i} value={v.category}>\n                      {v.category}\n                    </option>\n                  );\n                })}\n              </Select>\n            </Box>\n            <Box py={3}>\n              <Label>SubCategory</Label>\n              <Input\n                value={inputValues.subCategories || \"\"}\n                name=\"subCategories\"\n                onChange={onInputChange}\n              />\n              <Box py={2}>\n                <Button\n                  onClick={() =>\n                    onAdd(inputValues.subCategories, \"subCategories\")\n                  }\n                >\n                  Add\n                </Button>\n              </Box>\n            </Box>\n\n            <Box pb={2}>\n              <Label>SubSubCategory</Label>\n              <Input\n                value={inputValues.subSubCategories || \"\"}\n                name=\"subSubCategories\"\n                onChange={onInputChange}\n              />\n            </Box>\n\n            <Box>\n              <Button\n                onClick={() =>\n                  onAdd(inputValues.subSubCategories, \"subSubCategories\")\n                }\n              >\n                Add\n              </Button>\n            </Box>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Layout>\n  );\n}\n\nexport default Onboarding;\n","// @flow\n\nimport React from \"react\";\nimport { Alert } from \"theme-ui\";\n\nconst Ctx = React.createContext();\n\n// Styled Components\n// ==============================\n\nconst ToastContainer = (props) => (\n  <div\n    style={{ position: \"fixed\", right: 0, top: 0, zIndex: 1000 }}\n    {...props}\n  />\n);\nconst Toast = ({ children, onDismiss, ...rest }) => (\n  <Alert\n    style={{\n      margin: 10,\n      padding: 10,\n    }}\n    onClick={onDismiss}\n    {...rest}\n  >\n    {children}\n  </Alert>\n);\n\n// Provider\n// ==============================\n\nlet toastCount = 0;\n\nexport function ToastProvider({ children }) {\n  const [toasts, setToasts] = React.useState([]);\n\n  const add = ({ content, ...rest }) => {\n    const id = toastCount++;\n    const toast = { content, id, ...rest };\n\n    setToasts([...toasts, toast]);\n  };\n  const remove = (id) => {\n    const newToasts = toasts.filter((t) => t.id !== id);\n    setToasts(newToasts);\n  };\n  // avoid creating a new fn on every render\n  const onDismiss = (id) => () => remove(id);\n\n  return (\n    <Ctx.Provider value={{ add, remove }}>\n      {children}\n      <ToastContainer>\n        {toasts.map(({ content, id, ...rest }) => {\n          return (\n            <Toast key={id} Toast={Toast} onDismiss={onDismiss(id)} {...rest}>\n              {content}\n            </Toast>\n          );\n        })}\n      </ToastContainer>\n    </Ctx.Provider>\n  );\n}\n\n// Consumer\n// ==============================\n\nexport const useToasts = () => React.useContext(Ctx);\n","export function toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function(txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n","import React, { useState } from \"react\";\nimport { Input, Label, Text, Box, Button, Heading, Checkbox } from \"theme-ui\";\n\nimport Layout from \"../../components/Layout\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useModal } from \"react-modal-hook\";\nimport ReactModal from \"react-modal\";\nimport { useToasts } from \"../../components/Toasts\";\nimport { toTitleCase } from \"../../utils\";\n\nconst ONBOARD_AGENCY = gql`\n  mutation OnboardAgency($data: OnboardAgencyInput!) {\n    onboardAgency(data: $data) {\n      id\n    }\n  }\n`;\n\nconst CardFooter = ({ children }) => {\n  return (\n    <Box\n      p={25}\n      sx={{\n        position: \"absolute\",\n        bottom: 0,\n        right: 0,\n        left: 0,\n        height: \"auto\",\n        textAlign: \"right\"\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst Admin = () => {\n  const [onboard, { loading }] = useMutation(ONBOARD_AGENCY);\n  const [values, setValues] = useState({});\n  const [gqlArgs, setGQLArgs] = useState();\n  const { add } = useToasts();\n  const [showModal, hideModal] = useModal(\n    () => (\n      <ReactModal isOpen>\n        <Heading as=\"h1\">\n          Are you sure you would like to create this agency:\n        </Heading>\n\n        {Object.keys(values).length ? (\n          <>\n            {\" \"}\n            <Box p={45}>\n              <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n                <strong>\n                  Please review this for accuracy. It is difficule to undo a new\n                  agency.\n                </strong>\n              </Box>\n              {values.agencyName && (\n                <div>\n                  <Heading as=\"h3\">Agency:</Heading>\n                  {values.agencyName}\n                </div>\n              )}\n              {values.surflineSpotId && (\n                <div>\n                  <Heading as=\"h3\">SurflineSpotId:</Heading>\n                  {values.surflineSpotId}\n                </div>\n              )}\n              {values.stats && (\n                <div>\n                  <Heading as=\"h3\">Stats:</Heading>\n                  {JSON.stringify(values.stats)}\n                </div>\n              )}\n              {values.users && (\n                <div>\n                  <Heading as=\"h3\">Users:</Heading>\n                  {JSON.stringify(values.users)}\n                </div>\n              )}\n              {values.positions && (\n                <div>\n                  <Heading as=\"h3\">Positions:</Heading>\n                  {JSON.stringify(values.positions)}\n                </div>\n              )}\n              <Box py={20}>\n                <strong>\n                  {\" \"}\n                  In case you need Trevor to create, share this snippet:\n                </strong>\n              </Box>\n              {!gqlArgs ? (\n                <Button onClick={() => generateSnippet}>\n                  Generate Snippet\n                </Button>\n              ) : (\n                <code>\n                  {JSON.stringify(gqlArgs).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\")}\n                </code>\n              )}\n            </Box>\n            <CardFooter>\n              <Button\n                sx={{ marginRight: 5 }}\n                onClick={async () => {\n                  try {\n                    const res = await onboard({\n                      variables: {\n                        ...gqlArgs\n                      }\n                    });\n\n                    if (\n                      res.data &&\n                      res.data.onboardAgency &&\n                      res.data.onboardAgency.id\n                    ) {\n                      add({ content: \"Agency created!\", variant: \"success\" });\n                      hideModal();\n                    }\n                  } catch (e) {\n                    add({ content: e.message, variant: \"error\" });\n                  }\n                }}\n              >\n                {loading ? \"Creating...\" : \"Create Agency\"}\n              </Button>\n              <Button onClick={() => hideModal()} variant=\"secondary\">\n                Not yet\n              </Button>\n            </CardFooter>\n          </>\n        ) : (\n          <Box p={45}>\n            No values...\n            <CardFooter>\n              <Button onClick={() => hideModal()}>Go Back</Button>\n            </CardFooter>\n          </Box>\n        )}\n      </ReactModal>\n    ),\n    [values, gqlArgs, loading, add]\n  );\n\n  function handleCheckBoxChange(e) {\n    setValues({ ...values, [e.target.name]: !values[e.target.name] });\n  }\n\n  function handleChange(e, field) {\n    let cleanValue;\n    if (e.target.name === \"stats\") {\n      cleanValue = e.target.value.split(\",\").map(i => toTitleCase(i.trim()));\n    }\n    if (e.target.name === \"positions\") {\n      const removeFront = e.target.value.split(\",\");\n\n      cleanValue = removeFront\n        ? removeFront.map(i => ({\n            name: i && toTitleCase(i.trim()),\n            dispatchable: false\n          }))\n        : \"\";\n    }\n\n    if (e.target.name === \"users\") {\n      let removeFront = e.target.value.split(\":\");\n\n      if (!removeFront[1]) {\n        removeFront = e.target.value.split(\",\");\n      }\n\n      cleanValue = removeFront\n        ? removeFront.map(i => ({\n            name: i && toTitleCase(i.trim())\n          }))\n        : \"\";\n    }\n\n    setValues({\n      ...values,\n      [e.target.name]: cleanValue || toTitleCase(e.target.value)\n    });\n  }\n\n  function generateSnippet() {\n    setGQLArgs(formatGqlArgs(values));\n  }\n\n  function handleSubmit() {\n    generateSnippet();\n    showModal();\n  }\n\n  return (\n    <Layout withNav={true} bannerChildren=\"Watchtower Admin\">\n      <Box\n        sx={{ maxWidth: \"1200px\", margin: \"auto\" }}\n        py={45}\n        as=\"form\"\n        onSubmit={e => e.preventDefault()}\n      >\n        <Heading as=\"h1\">Create an agency</Heading>\n        <Text>Input information to create an agency</Text>\n        <Box py={25}>\n          {\" \"}\n          <Label>Agency Name</Label>\n          <Input id=\"agencyName\" name=\"agencyName\" onChange={handleChange} />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Surfline Spot Id</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              You can find this at the end of a surfline spot url. IT SHOULD\n              START WITH A 5 and be around 20+ characters. Example:\n            </strong>\n            <br />\n            https://www.surfline.com/surf-report/newport-beach-/5842041f4e65fad6a770882c\n          </Box>\n          <Input\n            id=\"surflineSpotId\"\n            name=\"surflineSpotId\"\n            onChange={handleChange}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Stats</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              {\" \"}\n              Should follow this notation with each type being separated by a\n              comma:\n            </strong>{\" \"}\n            <br />\n            Rescue, Rescue / Surf / Swimmer, Boat, Boat / Tow\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"stats\"\n            rows=\"15\"\n            style={{\n              width: \"100%\"\n            }}\n            onChange={e => handleChange(e)}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Users</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              {\" \"}\n              Should follow this notation with each type being separated by a\n              comma or a colon (:). IF THE NAMES HAVE A COMMA, MAKE SURE YOU USE\n              : TO SEPARATE. SEE EXAMPLE BELOW:\n            </strong>{\" \"}\n            <br />\n            Trevor Heath, David Rodriguez <br />\n            <strong>or</strong>\n            <br /> Heath, Trevor: Rodriguez, David\n            <br />\n            You can use this{\" \"}\n            <a href=\"https://convert.town/column-to-comma-separated-list\">\n              website\n            </a>{\" \"}\n            to convert a column to the correct format. The delimiter option\n            allows you to choose a comma or colon.\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"users\"\n            rows=\"15\"\n            style={{\n              width: \"100%\"\n            }}\n            onChange={e => handleChange(e)}\n          />\n        </Box>\n        <Box py={25}>\n          {\" \"}\n          <Label>Positions</Label>\n          <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n            <strong>\n              Should follow this notation with each type being separated by a\n              comma:\n            </strong>{\" \"}\n            <br />\n            Tower 10, 5210, 5220\n          </Box>\n          <Input\n            as=\"textarea\"\n            name=\"positions\"\n            rows=\"15\"\n            style={{ width: \"100%\" }}\n            onChange={handleChange}\n          />\n          {values.positions && (\n            <div>\n              <h4>Dispatchable?</h4>\n              <Box bg=\"primary\" m={3} p={3} sx={{ color: \"white\" }}>\n                <strong>\n                  Check the positions that are defaulted as dispatchable, this\n                  can be editted by the user later on.\n                </strong>\n              </Box>\n              {values.positions.map((p, k) => {\n                return (\n                  <Box>\n                    <Label mb={3}>\n                      <Checkbox\n                        defaultChecked={false}\n                        name={p.name}\n                        onClick={handleCheckBoxChange}\n                      />\n                      {p.name}\n                    </Label>\n                  </Box>\n                );\n              })}\n            </div>\n          )}\n        </Box>\n\n        <Box py={45} sx={{ width: \"100%\" }}>\n          <Button sx={{ width: \"100%\" }} onClick={handleSubmit}>\n            Create agency data\n          </Button>\n        </Box>\n\n        {/* {stats.split(\",\").map(i => (\n        <div>{i}</div>\n      ))} */}\n      </Box>\n    </Layout>\n  );\n};\n\nconst formatGqlArgs = data => {\n  let args = {\n    agencyName: data.agencyName,\n    activities: data.stats,\n    surflineSpotId: data.surflineSpotId\n  };\n  if (data.users) {\n    args.users = {\n      create: data.users.map(u => ({\n        name: u.name\n      }))\n    };\n  }\n\n  if (data.positions) {\n    args.positions = {\n      create: data.positions.map(u => ({\n        name: u.name,\n        dispatchable: data[u.name] ? true : false\n      }))\n    };\n  }\n\n  return {\n    data: {\n      ...args\n    }\n  };\n};\n\nexport default Admin;\n","import theme from \"@theme-ui/preset-bootstrap\";\n\nimport nightOwl from \"@theme-ui/prism/presets/night-owl.json\";\n\nexport default {\n  breakpoints: [\"576px\", \"768px\", \"992px\", \"1200px\"],\n  colors: {\n    white: \"#fff\",\n    black: \"#000\",\n    gray: [\n      \"#fff\",\n      \"#f8f9fa\",\n      \"#e9ecef\",\n      \"#dee2e6\",\n      \"#ced4da\",\n      \"#adb5bd\",\n      \"#6c757d\",\n      \"#495057\",\n      \"#343a40\",\n      \"#212529\",\n    ],\n    blue: \"#007bff\",\n    indigo: \"#6610f2\",\n    purple: \"#6f42c1\",\n    pink: \"#e83e8c\",\n    red: \"#dc3545\",\n    orange: \"#fd7e14\",\n    yellow: \"#ffc107\",\n    green: \"#28a745\",\n    teal: \"#20c997\",\n    cyan: \"#17a2b8\",\n    grayDark: \"#343a40\",\n    text: \"#212529\",\n    background: \"#fff\",\n    primary: \"#007bff\",\n    secondary: \"#6c757d\",\n    muted: \"#dee2e6\",\n    success: \"#28a745\",\n    info: \"#17a2b8\",\n    warning: \"#ffc107\",\n    danger: \"#dc3545\",\n    light: \"#f8f9fa\",\n    dark: \"#343a40\",\n    textMuted: \"#6c757d\",\n  },\n  space: [\"0rem\", \"0.25rem\", \"0.5rem\", \"1rem\", \"1.5rem\", \"3rem\"],\n  fonts: {\n    body:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n    heading: \"inherit\",\n    monospace:\n      'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n    sans:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n  },\n  fontSizes: [\n    \"0.75rem\",\n    \"0.875rem\",\n    \"1rem\",\n    \"1.25rem\",\n    \"1.5rem\",\n    \"1.75rem\",\n    \"2rem\",\n    \"2.5rem\",\n    \"3.5rem\",\n    \"4.5rem\",\n    \"5.5rem\",\n    \"6rem\",\n  ],\n  fontWeights: {\n    body: 400,\n    heading: 500,\n    bold: 700,\n    light: 300,\n    normal: 400,\n    display: 300,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.2,\n  },\n  sizes: {\n    sm: 540,\n    md: 720,\n    lg: 960,\n    xl: 1140,\n  },\n  shadows: {\n    default: \"0 .5rem 1rem rgba(0, 0, 0, .15)\",\n    sm: \"0 .125rem .25rem rgba(0, 0, 0, .075)\",\n    lg: \"0 1rem 3rem rgba(0, 0, 0, .175)\",\n  },\n  radii: {\n    default: \"0.25rem\",\n    sm: \"0.2rem\",\n    lg: \"0.3rem\",\n    pill: \"50rem\",\n  },\n  typeStyles: {\n    heading: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n    },\n    display: {\n      fontWeight: \"display\",\n      lineHeight: \"heading\",\n    },\n    forms: {\n      label: {\n        fontSize: 1,\n        fontWeight: \"bold\",\n      },\n    },\n    alerts: {\n      primary: {\n        color: \"white\",\n        bg: \"primary\",\n      },\n      error: {\n        bg: \"danger\",\n      },\n      success: {\n        bg: \"success\",\n      },\n    },\n    buttons: {\n      primary: {\n        color: \"white\",\n        bg: \"primary\",\n      },\n      link: {\n        bg: \"transparent\",\n      },\n      success: {\n        bg: \"success\",\n      },\n      secondary: {\n        color: \"black\",\n        bg: \"secondary\",\n      },\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      lineHeight: \"body\",\n      fontWeight: \"body\",\n    },\n    a: {\n      color: \"primary\",\n      textDecoration: \"none\",\n      \":hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    p: {\n      mb: 3,\n      lineHeight: \"body\",\n    },\n    h1: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 7,\n    },\n    h2: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 6,\n    },\n    h3: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 5,\n    },\n    h4: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 4,\n    },\n    h5: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 3,\n    },\n    h6: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      mt: 0,\n      mb: 2,\n      fontSize: 2,\n    },\n    blockquote: {\n      fontSize: 3,\n      mb: 3,\n    },\n    table: {\n      width: \"100%\",\n      marginBottom: 3,\n      color: \"gray.9\",\n      borderCollapse: \"collapse\",\n    },\n    th: {\n      verticalAlign: \"bottom\",\n      borderTopWidth: 2,\n      borderTopStyle: \"solid\",\n      borderTopColor: \"gray.3\",\n      borderBottomWidth: 2,\n      borderBottomStyle: \"solid\",\n      borderBottomColor: \"gray.3\",\n      padding: \".75rem\",\n      textAlign: \"inherit\",\n    },\n    td: {\n      borderBottomWidth: 2,\n      borderBottomStyle: \"solid\",\n      borderBottomColor: \"gray.3\",\n      verticalAlign: \"top\",\n      padding: \".75rem\",\n    },\n    inlineCode: {\n      color: \"pink\",\n    },\n    img: {\n      maxWidth: \"100%\",\n      height: \"auto\",\n    },\n  },\n\n  // styles: {\n  //   ...theme.styles,\n  //   padding: \"1rem\",\n  //   table: {\n  //     width: \"100%\",\n  //     my: 4,\n  //     // borderColor: colors.gray,\n  //     borderCollapse: \"separate\",\n  //     borderSpacing: 0\n  //   },\n\n  //   code: {\n  //     ...nightOwl\n  //   }\n  // }\n};\n","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport { isLoggedIn, isAdmin } from \"../services/auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) =>\n  isLoggedIn() && isAdmin() ? (\n    <Component {...rest} />\n  ) : (\n    <Redirect from=\"\" to=\"/admin/login\" noThrow />\n  );\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Component {...rest} />\n);\n\nexport { ProtectedRoute, PublicRoute };\n","import React, { useEffect } from \"react\";\nimport { Button, Label, Input, Box, Heading, Flex } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\n\nimport gql from \"graphql-tag\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { setToken, isLoggedIn } from \"../../services/auth\";\nimport { navigate } from \"@reach/router\";\n\nconst LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  const [login, { data, loading, error }] = useMutation(LOGIN);\n  const { register, handleSubmit } = useForm();\n  const onLogin = values => {\n    login({\n      variables: { email: values.email, password: values.password }\n    });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn()) {\n      navigate(\"/admin\");\n    }\n    if (data && data.login.token) {\n      setToken(data.login.token);\n      navigate(\"/admin\");\n    }\n  }, [data, error]);\n\n  return (\n    <Flex\n      sx={{\n        minHeight: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Box as=\"form\" sx={{ width: \"300px\" }} onSubmit={handleSubmit(onLogin)}>\n        <Box>\n          <Heading p={3} as=\"h3\">\n            Watchower Admin\n          </Heading>\n          <Box p={3}>\n            <Label>Email Address</Label>\n            <Input type=\"email\" name=\"email\" ref={register} />\n          </Box>\n          <Box p={3}>\n            <Label>Password</Label>\n            <Input type=\"password\" name=\"password\" ref={register} />\n          </Box>\n\n          <Box p={3}>\n            <Button block type=\"submit\">\n              {loading ? \"Logging in...\" : \"Login\"}\n            </Button>\n            {error && <Box>{error.message}</Box>}\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Button, Label, Input, Box, Heading, Text, Select } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\n\nimport gql from \"graphql-tag\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useToasts } from \"../../components/Toasts\";\n\nconst GET_AGENCIES = gql`\n  query GetAgencies($where: AgencyWhereInput) {\n    agencies(where: $where) {\n      id\n      name\n    }\n  }\n`;\n\nconst INVITE_USER = gql`\n  mutation InviteUser(\n    $email: String!\n    $agencyId: ID!\n    $role: Role!\n    $name: String!\n  ) {\n    sendInviteEmail(\n      email: $email\n      agencyId: $agencyId\n      role: $role\n      name: $name\n    ) {\n      success\n    }\n  }\n`;\n\nexport default function UserManagement() {\n  const [invite, { loading }] = useMutation(INVITE_USER);\n  const { data: agencies, loading: loadingAgencies } = useQuery(GET_AGENCIES);\n  const { register, handleSubmit } = useForm();\n  const { add } = useToasts();\n\n  const onInvite = async values => {\n    try {\n      const res = await invite({\n        variables: {\n          email: values.email,\n          role: values.role || \"USER\",\n          name: values.name,\n          agencyId: values.agencyId\n        }\n      });\n\n      if (\n        res.data &&\n        res.data.sendInviteEmail &&\n        res.data.sendInviteEmail.success\n      ) {\n        add({ content: \"User Invited!\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  return (\n    <Layout withNav={true} bannerChildren=\"User Management\">\n      <Box\n        sx={{ maxWidth: \"1200px\", margin: \"auto\" }}\n        py={45}\n        as=\"form\"\n        onSubmit={handleSubmit(onInvite)}\n      >\n        <Heading as=\"h1\">Invite Users</Heading>\n        <Text>Invite users to agencies.</Text>\n\n        <Box>\n          <Box py={25}>\n            <Label>Agencies</Label>\n\n            <Select type=\"select\" name=\"agencyId\" ref={register}>\n              {loadingAgencies ? (\n                <option>loading...</option>\n              ) : agencies ? (\n                agencies.agencies.map(a => (\n                  <option value={a.id}>{a.name}</option>\n                ))\n              ) : (\n                <option>No agencies</option>\n              )}\n            </Select>\n          </Box>\n          <Box py={25}>\n            <Label>Email Address</Label>\n            <Input\n              type=\"select\"\n              name=\"email\"\n              ref={register({ required: true })}\n            />\n          </Box>\n          <Box py={25}>\n            <Label>Name</Label>\n            <Input name=\"name\" ref={register({ required: true })} />\n          </Box>\n          <Box py={25}>\n            <Label>Role</Label>\n\n            <Select type=\"select\" name=\"role\" ref={register}>\n              <option value={\"USER\"}>User</option>\n              <option value={\"ADMIN\"}>Admin</option>\n            </Select>\n          </Box>\n\n          <Box py={25}>\n            <Button block type=\"submit\">\n              {loading ? \"Inviting in...\" : \"Invite\"}\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Box, Heading, Spinner, Flex, Select } from \"theme-ui\";\n\nimport gql from \"graphql-tag\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\n\nexport const sevenDaysAgo = moment().subtract(7, \"days\");\nexport const thirtyDaysAgo = moment().subtract(30, \"days\");\n\nconst dateRangeOptions = [\n  {\n    value: {\n      startDate: sevenDaysAgo,\n      endDate: moment()\n    },\n    label: \"Last 7 days\"\n  },\n  {\n    value: {\n      startDate: moment().startOf(\"day\"),\n      endDate: moment()\n    },\n    label: \"Today\"\n  },\n  {\n    value: {\n      startDate: thirtyDaysAgo,\n      endDate: moment().endOf(\"day\")\n    },\n    label: \"Last 30 days\"\n  }\n];\n\nconst GET_AGENCIES = gql`\n  query GetAgencies(\n    $where: AgencyWhereInput\n    $submissionWhereInput: SubmissionWhereInput\n  ) {\n    agencies(where: $where) {\n      id\n      name\n      submissionCount(where: $submissionWhereInput)\n    }\n  }\n`;\n\nexport default function AgencyActivity() {\n  const [dateRange, setDateRange] = useState(0);\n\n  const { data, loading: loadingAgencies } = useQuery(GET_AGENCIES, {\n    variables: {\n      submissionWhereInput: {\n        createdAt: {\n          gt: dateRangeOptions[dateRange].value.startDate.toISOString(),\n          lt: dateRangeOptions[dateRange].value.endDate.toISOString()\n        }\n      }\n    }\n  });\n\n  return (\n    <Layout withNav={true} bannerChildren=\"User Management\">\n      <Box sx={{ maxWidth: \"1200px\", margin: \"auto\" }} py={45}>\n        <Heading as=\"h1\">Agency Activity</Heading>\n        {loadingAgencies ? (\n          <Flex\n            sx={{\n              height: \"500px\",\n              width: \"100%\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <Spinner />\n          </Flex>\n        ) : (\n          <Box>\n            <Box py={45}>\n              <Select\n                id=\"dateRange\"\n                value={dateRange}\n                onChange={e => {\n                  setDateRange(e.target.value);\n                }}\n              >\n                {dateRangeOptions.map((i, k) => (\n                  <option name={i.label} value={k}>\n                    {i.label}\n                  </option>\n                ))}\n              </Select>\n            </Box>\n            <Box as=\"table\">\n              <Box as=\"thead\">\n                <Box as=\"tr\">\n                  <Box as=\"th\">Agency Name</Box>\n                  <Box as=\"th\"> Incident Count</Box>\n                </Box>\n              </Box>\n              <tbody>\n                {data &&\n                  data.agencies.map(a => {\n                    return (\n                      <Box as=\"tr\">\n                        <Box as=\"td\" p={10}>\n                          {a.name}\n                        </Box>\n                        <Box as=\"td\" p={10}>\n                          {a.submissionCount > 29 ? \"30+\" : a.submissionCount}\n                        </Box>\n                      </Box>\n                    );\n                  })}\n              </tbody>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\n\nimport { Button, Label, Input, Box, Heading, Select, Spinner } from \"theme-ui\";\nimport { useForm } from \"react-hook-form\";\nimport { useTable } from \"react-table\";\nimport styled from \"@emotion/styled\";\nimport gql from \"graphql-tag\";\n\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport { useToasts } from \"../../components/Toasts\";\n\nconst GET_AGENCY_DETAILS = gql`\n  query GetAgencyDetails($id: String!) {\n    agencies(where: { id: { equals: $id } }) {\n      id\n      name\n      users {\n        id\n        name\n        email\n        role\n        isSignedUp\n      }\n      settings {\n        id\n        surflineSpotId\n        dispatching\n        incidentReporting\n        epcr\n      }\n    }\n  }\n`;\n\nconst GET_AGENCIES = gql`\n  query GetAgencies($where: AgencyWhereInput) {\n    agencies(where: $where) {\n      id\n      name\n    }\n  }\n`;\n\nconst UPDATE_AGENCY = gql`\n  mutation UpdateAgency(\n    $where: AgencyWhereUniqueInput!\n    $data: AgencyUpdateInput!\n  ) {\n    updateOneAgency(where: $where, data: $data) {\n      id\n    }\n  }\n`;\n\nconst RE_SEND_INVITE = gql`\n  mutation ResendInvite($email: String!) {\n    resendInviteEmail(email: $email) {\n      success\n    }\n  }\n`;\n\nexport default function UserManagement() {\n  const [selectedAgencyId, selectAgency] = useState(null);\n  const [updateOneAgency, { loading }] = useMutation(UPDATE_AGENCY);\n  const [resendInvite, { loading: resendingInvite }] = useMutation(\n    RE_SEND_INVITE\n  );\n  const { data: agencies, loading: loadingAgencies } = useQuery(GET_AGENCIES);\n  const [loadAgency, { loading: loadingAgency, data }] = useLazyQuery(\n    GET_AGENCY_DETAILS\n  );\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const defaultFormValues = {\n    ...(data && data.agencies[0]),\n    ...(data && data.agencies[0].settings),\n  };\n  const { add } = useToasts();\n\n  useEffect(() => {\n    if (selectedAgencyId) {\n      loadAgency({\n        variables: {\n          id: selectedAgencyId,\n        },\n      });\n    }\n  }, [selectedAgencyId]);\n\n  const onUpdate = async (values) => {\n    try {\n      if (!selectedAgencyId) {\n        add({ content: \"Please select an agency to update\", variant: \"error\" });\n        return;\n      }\n      let settings = {};\n      if (values.surflineSpotId) {\n        settings = {\n          settings: {\n            update: {\n              surflineSpotId: values.surflineSpotId,\n            },\n          },\n        };\n      }\n\n      console.log({ ...settings });\n      const res = await updateOneAgency({\n        variables: {\n          where: {\n            id: selectedAgencyId,\n          },\n          data: {\n            ...settings,\n          },\n        },\n      });\n\n      if (res.data && res.data.updateOneAgency && res.data.updateOneAgency.id) {\n        add({ content: \"Agency Updated\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  const onResendInvite = async (args) => {\n    try {\n      if (!selectedAgencyId) {\n        add({ content: \"Please select an agency to update\", variant: \"error\" });\n        return;\n      }\n\n      const res = await resendInvite(args);\n\n      if (\n        res.data &&\n        res.data.resendInviteEmail &&\n        res.data.resendInviteEmail.success\n      ) {\n        add({ content: \"Sent!\", variant: \"success\" });\n      }\n    } catch (e) {\n      add({ content: e.message, variant: \"error\" });\n    }\n  };\n\n  return (\n    <Layout\n      withNav={true}\n      bannerChildren=\"User Management\"\n      loading={resendingInvite}\n    >\n      <Box sx={{ maxWidth: \"1200px\", margin: \"auto\" }} py={45}>\n        <Heading as=\"h1\">Update Agency</Heading>\n        <Box py={25}>\n          <Select\n            onChange={(e) => selectAgency(e.target.value)}\n            type=\"select\"\n            name=\"agencyId\"\n          >\n            {loadingAgencies ? (\n              <option>loading...</option>\n            ) : agencies ? (\n              [\n                <option value=\"\">Select an agency</option>,\n                ...agencies.agencies.map((a) => (\n                  <option value={a.id}>{a.name}</option>\n                )),\n              ]\n            ) : (\n              <option>No agencies</option>\n            )}\n          </Select>\n        </Box>\n\n        <Box>\n          {loadingAgency ? (\n            <Spinner />\n          ) : (\n            <Box as=\"form\" onSubmit={handleSubmit(onUpdate)}>\n              <Box py={25}>\n                <Label>Name</Label>\n                <Input\n                  type=\"select\"\n                  name=\"name\"\n                  defaultValue={defaultFormValues.name}\n                  ref={register({\n                    required: false,\n                    minLength: {\n                      value: 3,\n                      message: \"Make sure the name is long enough.\",\n                    },\n                  })}\n                />\n                <FormError error={errors.name} />\n              </Box>\n              <Box py={25}>\n                <Label>Surfline Id</Label>\n                <Input\n                  type=\"select\"\n                  name=\"surflineSpotId\"\n                  defaultValue={defaultFormValues.surflineSpotId}\n                  ref={register({\n                    required: false,\n                    minLength: {\n                      value: 15,\n                      message:\n                        \"Spot ids should looks something like this: 5842041f4e65fad6a77089fa\",\n                    },\n                  })}\n                />\n                <FormError error={errors.surflineSpotId} />\n              </Box>\n              <Box py={25}>\n                <Button block type=\"submit\">\n                  {loading ? \"Updating...\" : \"Update\"}\n                </Button>\n              </Box>\n            </Box>\n          )}\n          {data && data.agencies[0].users ? (\n            <Box py={25}>\n              <h2>Users </h2>\n              <UserTable\n                data={data.agencies[0].users}\n                resendInvite={onResendInvite}\n              />\n              <FormError error={errors.users} />\n            </Box>\n          ) : (\n            <Fragment />\n          )}\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n\nconst FormError = ({ error }) => {\n  if (!error) return <Fragment />;\n  return <Box color=\"red\">{error.message}</Box>;\n};\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.value}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst UserTable = ({ data, resendInvite }) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"Role\",\n        accessor: \"role\",\n      },\n      {\n        Header: \"Registered\",\n        accessor: (value) => {\n          return value.isSignedUp === true ? \"Yes\" : \"No\";\n        },\n      },\n      {\n        Header: \"Resend Invite \",\n        accessor: (value) => {\n          if (value.isSignedUp === false && value.email) {\n            return (\n              <Button\n                onClick={() =>\n                  resendInvite({\n                    variables: {\n                      email: value.email,\n                    },\n                  })\n                }\n                sx={{ variant: \"link\" }}\n              >\n                Resend Invite\n              </Button>\n            );\n          }\n          return <Fragment />;\n        },\n      },\n    ],\n    []\n  );\n\n  const tableData = React.useMemo(() => data, []);\n  return (\n    <Styled>\n      <Table columns={columns} data={tableData} />\n    </Styled>\n  );\n};\n\nconst Styled = styled.div`\n  padding: 1rem;\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    border-radius: 4px;\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th {\n      background-color: ${(props) => {\n        return props.theme.colors[\"grayDark\"];\n      }};\n      text-align: left;\n      padding: 1rem;\n      color: white;\n    }\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"theme-ui\";\n\nimport \"./styles.css\";\n\nimport Onboarding from \"./routes/Onboarding\";\nimport Admin from \"./routes/admin\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport { Router } from \"@reach/router\";\nimport theme from \"./theme\";\nimport client from \"./services/Apollo\";\nimport { PublicRoute, ProtectedRoute } from \"./components/routes\";\nimport Login from \"./routes/admin/Login\";\nimport UserManagement from \"./routes/admin/UserManagement\";\nimport AgencyActivity from \"./routes/admin/Activity\";\nimport { ToastProvider } from \"./components/Toasts\";\nimport Prism from \"@theme-ui/prism\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport EditAgency from \"./routes/admin/EditAgency\";\n\nconst components = {\n  pre: ({ children }) => <>{children}</>,\n  code: Prism\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme} components={components}>\n        <ModalProvider>\n          <ToastProvider>\n            <Router>\n              <PublicRoute component={Onboarding} path=\"/\" />\n              <ProtectedRoute path=\"admin\" component={Admin} />\n              <ProtectedRoute path=\"admin/users\" component={UserManagement} />\n              <ProtectedRoute path=\"admin/edit-agency\" component={EditAgency} />\n              <ProtectedRoute\n                path=\"admin/activity\"\n                component={AgencyActivity}\n              />\n              <PublicRoute component={Login} path=\"/admin/login\" />\n            </Router>\n          </ToastProvider>\n        </ModalProvider>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}